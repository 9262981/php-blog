-- phpMyAdmin SQL Dump
-- version 3.4.8
-- http://www.phpmyadmin.net
--
-- 主机: 118.123.21.153
-- 生成日期: 2017 年 01 月 23 日 08:23
-- 服务器版本: 5.6.22
-- PHP 版本: 5.2.17

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `9262981blog`
--

-- --------------------------------------------------------

--
-- 表的结构 `pppf_article`
--

CREATE TABLE IF NOT EXISTS `pppf_article` (
  `article_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `article_reid` mediumint(8) unsigned NOT NULL DEFAULT '0',
  `article_username` varchar(20) NOT NULL,
  `article_type` tinyint(2) unsigned NOT NULL,
  `article_title` varchar(40) NOT NULL,
  `article_cid` varchar(10) NOT NULL,
  `article_content` text NOT NULL,
  `article_readcount` smallint(5) unsigned NOT NULL DEFAULT '0',
  `article_commendcount` smallint(5) unsigned NOT NULL DEFAULT '0',
  `article_date` datetime NOT NULL,
  `article_last_modify_date` datetime NOT NULL,
  PRIMARY KEY (`article_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=94 ;

--
-- 转存表中的数据 `pppf_article`
--

INSERT INTO `pppf_article` (`article_id`, `article_reid`, `article_username`, `article_type`, `article_title`, `article_cid`, `article_content`, `article_readcount`, `article_commendcount`, `article_date`, `article_last_modify_date`) VALUES
(80, 0, '9262981', 1, '10个实用的PHP正则表达式汇总', '正则', '<p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">本文实例讲述了10个实用的PHP正则表达式汇总，分享给大家供大家参考。具体如下：</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">正则表达式是程序开发中一个重要的元素，它提供用来描述或匹配文本的字符串，如特定的字符、词或算式等。但在某些情况下，用正则表达式去验证一个字符串比较复杂和费时。本文为你介绍10种常见的实用PHP正则表达式的写法，希望对你的工作有所帮助。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>1. 验证E-mail地址</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">　　这是一个用于验证电子邮件的正则表达式。但它并不是高效、完美的解决方案。在此不推荐使用。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="67477" class="copybut" id="copybut67477" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$email = &quot;test@ansoncheung.tk&quot;;<br/>if (preg_match(&#39;/^[^0-9][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[@][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{2,4}$/&#39;,$email)) {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Your email is ok.&quot;;<br/>} else {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Wrong email address format&quot;;<br/>}</p><p><br style="font-family: tahoma, arial, 宋体; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: tahoma, arial, 宋体; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">　　为了更加有效验证电子邮件地址，推荐使用</span><a target="_blank" href="http://php.net/manual/en/function.filter-var.php" style="color: rgb(0, 102, 153); text-decoration: none; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">filer_var&nbsp;</a><span style="font-family: tahoma, arial, 宋体; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">。</span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="59191" class="copybut" id="copybut59191" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>if (filter_var(&#39;test+email@ansoncheung&#39;, FILTER_VALIDATE_EMAIL)) {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Your email is ok.&quot;;<br/>} else {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Wrong email address format.&quot;;<br/>}</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>2. 验证用户名</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">　　这是一个用于验证用户名的实例，其中包括字母、数字（A-Z，a-z，0-9）、下划线以及最低5个字符，最大20个字符。同时，也可以根据需要，对最小值和最大值做合理的修改。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="37164" class="copybut" id="copybut37164" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$username = &quot;user_name12&quot;;<br/>if (preg_match(&#39;/^[a-zd_]{5,20}$/i&#39;, $username)) {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Your username is ok.&quot;;<br/>} else {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Wrong username format.&quot;;<br/>}</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>3. 验证电话号码</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">　　这是一个验证美国电话号码的实例。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="76685" class="copybut" id="copybut76685" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$phone = &quot;(021)423-2323&quot;;<br/>if (preg_match(&#39;/(?d{3})?[-s.]?d{3}[-s.]d{4}/x&#39;, $phone)) {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Your phone number is ok.&quot;;<br/>} else {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Wrong phone number.&quot;;<br/>}</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>4. 验证IP地址</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">　　这是一个用来验证IPv4地址的实例。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="58122" class="copybut" id="copybut58122" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$IP = &quot;198.168.1.78&quot;;<br/>if (preg_match(&#39;/^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/&#39;,$IP)) {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Your IP address is ok.&quot;;<br/>} else {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Wrong IP address.&quot;;<br/>}</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>5. 验证邮政编码</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">　　这是一个用来验证邮政编码的实例。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="40369" class="copybut" id="copybut40369" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$zipcode = &quot;12345-5434&quot;;<br/>&nbsp;if (preg_match(&quot;/^([0-9]{5})(-[0-9]{4})?$/i&quot;,$zipcode)) {<br/>&nbsp;echo &quot;Your Zip code is ok.&quot;;<br/>&nbsp;} else {<br/>&nbsp;echo &quot;Wrong Zip code.&quot;;<br/>&nbsp;}</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>6. 验证SSN（社会保险号）</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">　　这是一个验证美国SSN的实例。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="67072" class="copybut" id="copybut67072" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$ssn = &quot;333-23-2329&quot;;<br/>if (preg_match(&#39;/^[d]{3}-[d]{2}-[d]{4}$/&#39;,$ssn)) {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Your SSN is ok.&quot;;<br/>} else {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Wrong SSN.&quot;;<br/>}</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>7. 验证信用卡号</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="86962" class="copybut" id="copybut86962" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$cc = &quot;378282246310005&quot;;<br/>if (preg_match(&#39;/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})$/&#39;, $cc)) {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Your credit card number is ok.&quot;;<br/>} else {<br/>&nbsp;&nbsp;&nbsp; echo &quot;Wrong credit card number.&quot;;<br/>}</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>8. 验证域名</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="53850" class="copybut" id="copybut53850" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$url = &quot;http://ansoncheung.tk/&quot;;<br/>&nbsp;if (preg_match(&#39;/^(http|https|ftp)://([A-Z0-9][A-Z0-9_-]*(?:.[A-Z0-9][A-Z0-9_-]*)+):?(d+)?/?/i&#39;, $url)) {<br/>&nbsp;echo &quot;Your url is ok.&quot;;<br/>&nbsp;} else {<br/>&nbsp;echo &quot;Wrong url.&quot;;<br/>&nbsp;}</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>9. 从特定URL中提取域名</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="53186" class="copybut" id="copybut53186" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$url = &quot;http://ansoncheung.tk/articles&quot;;<br/>&nbsp;preg_match(&#39;@^(?:http://)?([^/]+)@i&#39;, $url, $matches);<br/>&nbsp;$host = $matches[1];<br/>echo $host;</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><strong>10. 将文中关键词高亮显示</strong></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="line-height: 21.6px; font-size: 12px; float: right;"><a data="28619" class="copybut" id="copybut28619" style="color: rgb(51, 51, 51); cursor: pointer;"><span style="text-decoration:underline;">复制代码</span></a></span>代码如下:</p><p>$text = &quot;Sample sentence from AnsonCheung.tk, regular expression has become popular in web programming. Now we learn regex. According to wikipedia, Regular expressions (abbreviated as regex or regexp, with plural forms regexes, regexps, or regexen) are written in a formal language that can be interpreted by a regular expression processor&quot;;<br/>$text = preg_replace(&quot;/(regex)/i&quot;, &#39;&lt;span style=&quot;background:#5fc9f6&quot;&gt;1&lt;/span&gt;&#39;, $text);<br/>echo $text;</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 5px 0px; font-size: 14px; font-family: tahoma, arial, 宋体; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">希望本文所述对大家的PHP程序设计有所帮助。</p><p><br/></p>', 48, 0, '2016-03-13 11:07:25', '0000-00-00 00:00:00');
INSERT INTO `pppf_article` (`article_id`, `article_reid`, `article_username`, `article_type`, `article_title`, `article_cid`, `article_content`, `article_readcount`, `article_commendcount`, `article_date`, `article_last_modify_date`) VALUES
(81, 0, '9262981', 1, '按位异或运算符：^', 'javascript', '<p>异或，英文为exclusive OR，或缩写成xor</p><p>异或（<a style="color: rgb(19, 110, 194); text-decoration: none;">xor</a>）是一个数学运算符。它应用于逻辑运算。异或的数学符号为“⊕”，计算机符号为“xor”。其运算法则为：</p><p>a⊕b = (¬a ∧ b) ∨ (a ∧¬b)</p><p>如果a、b两个值不相同，则异或结果为1。如果a、b两个值相同，异或结果为0。</p><p>异或也叫半加运算，其运算法则相当于不带进位的二进制加法：二进制下用1表示真，0表示假，则异或的运算法则为：0⊕0=0，1⊕0=1，0⊕1=1，1⊕1=0（同为0，异为1），这些法则与加法是相同的，只是不带进位。</p><p>异或略称为XOR、EOR、EX-OR</p><p>程序中有三种演算子：XOR、xor、⊕。</p><p>使用方法如下</p><p>z = x ⊕ y</p><p>z = x xor y</p><h2 class="LW_CollapsibleArea_TitleDiv" style="font-family: &#39;Segoe UI Semibold&#39;, &#39;Segoe UI&#39;, &#39;Lucida Grande&#39;, Verdana, Arial, Helvetica, sans-serif; font-size: 13px; font-weight: normal; margin: 0px; padding-bottom: 5px; padding-top: 20px;"><p><a class="LW_CollapsibleArea_TitleAhref" title="" role="button" style="cursor: text; outline: none;"><span class="LW_CollapsibleArea_Title" style="font-family: &#39;Segoe UI Semibold&#39;, &#39;Segoe UI&#39;, &#39;Lucida Grande&#39;, Verdana, Arial, Helvetica, sans-serif; display: inline-block; font-size: 1.769em;">备注</span></a></p><p><a href="https://msdn.microsoft.com/zh-cn/library/3akey979.aspx#Anchor_1" class="LW_CollapsibleArea_Anchor_Img" title="右键单击以复制并共享此部分的链接" style="display: inline-block; width: 20px; height: 20px; overflow: hidden; text-decoration: none; color: rgb(0, 0, 0); background-image: url(&quot;/Areas/Epx/Content/Images/ImageSprite.png?v=635914614327034862&quot;); background-attachment: scroll; background-size: initial; background-origin: initial; background-clip: initial; background-position: -502px -3px; background-repeat: no-repeat;"></a></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 15.6px; background-color: rgb(255, 255, 255);">result&nbsp;=&nbsp;expression1&nbsp;Xor&nbsp;expression2</pre><p><a href="https://msdn.microsoft.com/zh-cn/library/3akey979.aspx#Anchor_1" class="LW_CollapsibleArea_Anchor_Img" title="右键单击以复制并共享此部分的链接" style="display: inline-block; width: 20px; height: 20px; overflow: hidden; text-decoration: none; color: rgb(0, 0, 0); background-image: url(&quot;/Areas/Epx/Content/Images/ImageSprite.png?v=635914614327034862&quot;); background-attachment: scroll; background-size: initial; background-origin: initial; background-clip: initial; background-position: -502px -3px; background-repeat: no-repeat;"></a><br/></p></h2><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px;"><span id="mt1" class="sentence" data-guid="7f4991abb9a579ac77574bc84995e475" data-source="The bitwise exclusive OR operator (&lt;strong&gt;^&lt;/strong&gt;) compares each bit of its first operand to the corresponding bit of its second operand." xml:space="preserve">按位“异或”运算符 (<strong xmlns="http://www.w3.org/1999/xhtml">^</strong>) 将第一操作数的每个位与第二操作数的相应位进行比较。</span><span id="mt2" class="sentence" data-guid="a635ecbd43d9db07407d40823359762f" data-source="If one bit is 0 and the other bit is 1, the corresponding result bit is set to 1." xml:space="preserve">如果一个位是 0，另一个位是 1，则相应的结果位将设置为 1。</span><span id="mt3" class="sentence" data-guid="a09eba7f0138c680df8546c0d1489a6c" data-source="Otherwise, the corresponding result bit is set to 0." xml:space="preserve">否则，将对应的结果位设置为 0。</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px;"><span id="mt4" class="sentence" data-guid="880e3f41024e0c0a3571bc7e66728287" data-source="Both operands to the bitwise exclusive OR operator must be of integral types." xml:space="preserve">按位“异或”运算符的两个操作数都必须为整型。</span><span id="mt5" class="sentence" data-guid="675e6e3a7902f7d35a149fee801f82eb" data-source="The usual arithmetic conversions covered in &lt;span class=&quot;mtpsTagOuterHtml&quot; &gt;&lt;span&gt;Arithmetic Conversions&lt;/span&gt;&lt;/span&gt; are applied to the operands." xml:space="preserve">&nbsp;<a href="https://msdn.microsoft.com/zh-cn/library/09ka8bxx.aspx" style="text-decoration: none; color: rgb(0, 112, 159);">算术转换</a>中涵盖的常用算术转换适用于操作数。</span></p><h3 class="LW_CollapsibleArea_TitleDiv" style="font-family: &#39;Segoe UI Semibold&#39;, &#39;Segoe UI&#39;, &#39;Lucida Grande&#39;, Verdana, Arial, Helvetica, sans-serif; font-size: 13px; font-weight: normal; margin: 0px; padding-bottom: 5px; padding-top: 20px;"><p><a class="LW_CollapsibleArea_TitleAhref" title="折叠" role="button" style="cursor: text; outline: none;"><span class="LW_CollapsibleArea_Title" style="font-family: &#39;Segoe UI Semibold&#39;, &#39;Segoe UI&#39;, &#39;Lucida Grande&#39;, Verdana, Arial, Helvetica, sans-serif; display: inline-block; font-size: 1.231em;">^ 的运算符关键字</span></a></p></h3><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px;"><span id="mt7" class="sentence" data-guid="312301801e9b9397ae02a3d29f5185b2" data-source="The &lt;strong&gt;xor&lt;/strong&gt; operator is the text equivalent of &lt;strong&gt;^&lt;/strong&gt;." xml:space="preserve"><strong xmlns="http://www.w3.org/1999/xhtml">xor</strong>&nbsp;运算符是与&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml">^</strong>&nbsp;等效的文本。</span><span id="mt8" class="sentence" data-guid="5acbfa24aeff546564f66ef748a04200" data-source="There are two ways to access the &lt;strong&gt;xor&lt;/strong&gt; operator in your programs: include the header file &lt;span class=&quot;code&quot;&gt;iso646.h&lt;/span&gt;, or compile with the &lt;span class=&quot;mtpsTagOuterHtml&quot; &gt;&lt;span&gt;/Za&lt;/span&gt;&lt;/span&gt; (Disable language extensions) compiler option." xml:space="preserve">在您的程序中，可通过两种方法访问&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml">xor</strong>&nbsp;运算符：包含头文件&nbsp;<span class="code" xmlns="http://www.w3.org/1999/xhtml" style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);">iso646.h</span>，或使用&nbsp;<a href="https://msdn.microsoft.com/zh-cn/library/0k0w269d.aspx" style="text-decoration: none; color: rgb(0, 112, 159);">/Za</a>（禁用语言扩展）编译器选项进行编译。</span></p><pre style="padding: 5px; margin-top: 0px; margin-bottom: 0px; overflow: auto; word-wrap: normal; font-family: Consolas, Courier, monospace !important;">//&nbsp;expre_Bitwise_Exclusive_OR_Operator.cpp&nbsp;//&nbsp;compile&nbsp;with:&nbsp;/EHsc&nbsp;//&nbsp;Demonstrate&nbsp;bitwise&nbsp;exclusive&nbsp;OR&nbsp;#include&nbsp;&lt;iostream&gt;&nbsp;using&nbsp;namespace&nbsp;std;&nbsp;int&nbsp;main()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;unsigned&nbsp;short&nbsp;a&nbsp;=&nbsp;0x5555;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;pattern&nbsp;0101&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;unsigned&nbsp;short&nbsp;b&nbsp;=&nbsp;0xFFFF;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;pattern&nbsp;1111&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&nbsp;&lt;&lt;&nbsp;hex&nbsp;&lt;&lt;&nbsp;(&nbsp;a&nbsp;^&nbsp;b&nbsp;)&nbsp;&lt;&lt;&nbsp;endl;&nbsp;&nbsp;&nbsp;//&nbsp;prints&nbsp;&quot;aaaa&quot;&nbsp;pattern&nbsp;1010&nbsp;...&nbsp;}</pre><h2 class="LW_CollapsibleArea_TitleDiv" style="font-family: &#39;Segoe UI Semibold&#39;, &#39;Segoe UI&#39;, &#39;Lucida Grande&#39;, Verdana, Arial, Helvetica, sans-serif; font-size: 13px; font-weight: normal; margin: 0px; padding-bottom: 5px; padding-top: 20px;"></h2><h1 class="title" style="margin: 0px 0px 12px; padding: 0px; border: 0px; outline: 0px; line-height: 27.5px; font-size: 22px; clear: both; color: rgb(58, 62, 67); font-family: &#39;Segoe UI Semibold&#39;, &#39;Segoe UI&#39;, &#39;Lucida Grande&#39;, Verdana, Arial, Helvetica, sans-serif; white-space: normal; background: rgb(255, 255, 255);">异或运算符 (Visual Basic)</h1><p>&nbsp;</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt1" class="sentence" data-guid="dd9bc88f9b1e43389e9421ce2fde694e" data-source="Performs a logical exclusion on two &lt;strong&gt;Boolean&lt;/strong&gt; expressions, or a bitwise exclusion on two numeric expressions." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">对两个&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;表达式执行逻辑异或运算，或对两个数值表达式执行按位异或运算。</span></p><p><a class="LW_CollapsibleArea_TitleAhref" title="" id="3d2ca919-f370-4f74-92f3-5b5696ef935a" style="margin: 0px; padding: 0px; border: 0px; outline: none; line-height: 18.2px; color: rgb(0, 0, 0); background: transparent;"><img src="https://i-technet.sec.s-msft.com/Areas/Global/Content/clear.gif" border="0" class="cl_collapsiblearea_expand LW_CollapsibleArea_Img" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; width: 15px; height: 14px; overflow: hidden; vertical-align: middle; background: url(&quot;/Areas/Global/Content/ImageSprite.png?v=635914614488597213&quot;) -1627px -3px no-repeat scroll;"/><span class="LW_CollapsibleArea_Title" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; word-break: break-all; word-wrap: break-word; background: transparent;">语法</span></a></p><hr class="LW_CollapsibleArea_Hr" style="border-style: none; color: rgb(229, 229, 229);"/><p><a style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; color: rgb(0, 102, 221); background: transparent;" name="CodeSpippet0"></a></p><p><a title="" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; color: rgb(0, 102, 221); background: transparent;"></a></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 15.6px; background-color: transparent;">result&nbsp;=&nbsp;expression1&nbsp;Xor&nbsp;expression2</pre><p><a class="LW_CollapsibleArea_TitleAhref" title="" id="8ee083e4-8b25-4872-809f-a938383fd5a3" style="margin: 0px; padding: 0px; border: 0px; outline: none; line-height: 18.2px; color: rgb(0, 0, 0); background: transparent;"><img src="https://i-technet.sec.s-msft.com/Areas/Global/Content/clear.gif" border="0" class="cl_collapsiblearea_expand LW_CollapsibleArea_Img" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; width: 15px; height: 14px; overflow: hidden; vertical-align: middle; background: url(&quot;/Areas/Global/Content/ImageSprite.png?v=635914614488597213&quot;) -1627px -3px no-repeat scroll;"/><span class="LW_CollapsibleArea_Title" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; word-break: break-all; word-wrap: break-word; background: transparent;">部件</span></a></p><hr class="LW_CollapsibleArea_Hr" style="border-style: none; color: rgb(229, 229, 229);"/><ul class="definitionTable list-paddingleft-2" style="margin: 0px 0px 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><li><p><em style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">result</em></p></li><li><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt3" class="sentence" data-guid="50edf5403c0e270490508221b859330b" data-source="Required." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">必选。</span>&nbsp;<span id="mt4" class="sentence" data-guid="cc523e9de28b7629eb0caec3be0d88bc" data-source="Any &lt;strong&gt;Boolean&lt;/strong&gt; or numeric variable." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">任何&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;或数值变量。</span>&nbsp;<span id="mt5" class="sentence" data-guid="9484b94e18473e9a0a619836eb2c5d2c" data-source="For Boolean comparison, &lt;em&gt;result&lt;/em&gt; is the logical exclusion (exclusive logical disjunction) of two &lt;strong&gt;Boolean&lt;/strong&gt; values." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">对于 Boolean 比较，<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">result</em>&nbsp;是两个&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;值的逻辑异或运算（互斥逻辑析取）。</span>&nbsp;<span id="mt6" class="sentence" data-guid="e7ae6b28faabee7b84cd255458404857" data-source="For bitwise operations, &lt;em&gt;result&lt;/em&gt; is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">对于按位运算，<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">result</em>&nbsp;是代表两个数值位组合模式的按位异或运算（互斥按位析取）的数值。</span></p></li><li><p><em style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression1</em></p></li><li><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt7" class="sentence" data-guid="50edf5403c0e270490508221b859330b" data-source="Required." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">必选。</span>&nbsp;<span id="mt8" class="sentence" data-guid="f08f309c03fcf67ad1df439e00d3da69" data-source="Any &lt;strong&gt;Boolean&lt;/strong&gt; or numeric expression." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">任何&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;或数值表达式。</span></p></li><li><p><em style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression2</em></p></li><li><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt9" class="sentence" data-guid="50edf5403c0e270490508221b859330b" data-source="Required." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">必选。</span>&nbsp;<span id="mt10" class="sentence" data-guid="f08f309c03fcf67ad1df439e00d3da69" data-source="Any &lt;strong&gt;Boolean&lt;/strong&gt; or numeric expression." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">任何&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;或数值表达式。</span></p></li></ul><p><a class="LW_CollapsibleArea_TitleAhref" title="" id="694cd133-909d-4752-b472-e68576012a41" style="margin: 0px; padding: 0px; border: 0px; outline: none; line-height: 18.2px; color: rgb(0, 0, 0); background: transparent;"><img src="https://i-technet.sec.s-msft.com/Areas/Global/Content/clear.gif" border="0" class="cl_collapsiblearea_expand LW_CollapsibleArea_Img" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; width: 15px; height: 14px; overflow: hidden; vertical-align: middle; background: url(&quot;/Areas/Global/Content/ImageSprite.png?v=635914614488597213&quot;) -1627px -3px no-repeat scroll;"/><span class="LW_CollapsibleArea_Title" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; word-break: break-all; word-wrap: break-word; background: transparent;">备注</span></a></p><hr class="LW_CollapsibleArea_Hr" style="border-style: none; color: rgb(229, 229, 229);"/><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span style="color: rgb(255, 0, 0);"><span id="mt11" class="sentence" data-guid="92046e30b990bbc93edf43667bef4662" data-source="For Boolean comparison, &lt;em&gt;result&lt;/em&gt; is &lt;strong&gt;True&lt;/strong&gt; if and only if exactly one of &lt;em&gt;expression1&lt;/em&gt; and &lt;em&gt;expression2&lt;/em&gt; evaluates to &lt;strong&gt;True&lt;/strong&gt;." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">对于 Boolean 比较，当且仅当&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression1</em>&nbsp;和&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression2</em>&nbsp;的计算结果之一正好为&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong>&nbsp;时，<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">result</em>&nbsp;为&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong>。</span>&nbsp;</span><span id="mt12" class="sentence" data-guid="9eddca3518c95ef29c4629683de82410" data-source="That is, if and only if &lt;em&gt;expression1&lt;/em&gt; and &lt;em&gt;expression2&lt;/em&gt; evaluate to opposite &lt;strong&gt;Boolean&lt;/strong&gt; values." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">即，当且仅当&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression1</em>&nbsp;和&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression2</em>&nbsp;计算结果为相反的&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;值时。</span>&nbsp;<span id="mt13" class="sentence" data-guid="1604afc73228d66564adba02d5eb0314" data-source="The following table illustrates how &lt;em&gt;result&lt;/em&gt; is determined." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">下表演示如何确定&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">result</em>。</span></p><table><tbody><tr class="firstRow"><th><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt14" class="sentence" data-guid="33a9689d5e43c56ecb657685da7603a0" data-source="If &lt;em&gt;expression1&lt;/em&gt; is" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">如果&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression1</em>&nbsp;为</span></p></th><th><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt15" class="sentence" data-guid="3d9277c877865cd9618617744996018d" data-source="And &lt;em&gt;expression2&lt;/em&gt; is" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">并且&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression2</em>&nbsp;为</span></p></th><th><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt16" class="sentence" data-guid="5d9aab15f7a5ba76de98d40ba9fd8e0c" data-source="The value of &lt;em&gt;result&lt;/em&gt; is" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">result</em>&nbsp;的值为</span></p></th></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">False</strong></p></td></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">False</strong></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong></p></td></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">False</strong></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong></p></td></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">False</strong></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">False</strong></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">False</strong></p></td></tr></tbody></table><table><tbody><tr class="firstRow"><th align="left" style="word-break: break-all;"><span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">&nbsp;</span><span class="alertTitle" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">注意</span></th></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt29" class="sentence" data-guid="c457fa99511c67098c62ba6e5b0981d1" data-source="In a Boolean comparison, the &lt;strong&gt;Xor&lt;/strong&gt; operator always evaluates both expressions, which could include making procedure calls." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">在 Boolean 比较中，<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Xor</strong>&nbsp;运算符总是计算两个表达式，其中可能包括调用过程。</span>&nbsp;<span id="mt30" class="sentence" data-guid="4d1d88024e3f0a2487b42ed3083a47c5" data-source="There is no short-circuiting counterpart to &lt;strong&gt;Xor&lt;/strong&gt;, because the result always depends on both operands." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Xor</strong>&nbsp;没有相应的短路式运算符，因为结果总是取决于两个操作数。</span>&nbsp;<span id="mt31" class="sentence" data-guid="6b153d8aa322139c4076945e76ed0e25" data-source="For &lt;em&gt;short-circuiting&lt;/em&gt; logical operators, see &lt;span class=&quot;mtpsTagOuterHtml&quot; &gt;&lt;span&gt;AndAlso 运算符 (Visual Basic)&lt;/span&gt;&lt;/span&gt; and &lt;span class=&quot;mtpsTagOuterHtml&quot; &gt;&lt;span&gt;OrElse 运算符 (Visual Basic)&lt;/span&gt;&lt;/span&gt;." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">有关“短路式”逻辑运算符，请参见&nbsp;<a href="https://technet.microsoft.com/zh-cn/subscriptions/cb8x3kfz" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; color: rgb(0, 102, 221); text-decoration: none; background: transparent;">AndAlso 运算符 (Visual Basic)</a>&nbsp;和&nbsp;<a href="https://technet.microsoft.com/zh-cn/subscriptions/ea1sssb2" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; color: rgb(0, 102, 221); text-decoration: none; background: transparent;">OrElse 运算符 (Visual Basic)</a>。</span></p></td></tr></tbody></table><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt32" class="sentence" data-guid="072ab76ec4e890473a34733e84680253" data-source="For bitwise operations, the &lt;strong&gt;Xor&lt;/strong&gt; operator performs a bitwise comparison of identically positioned bits in two numeric expressions and sets the corresponding bit in &lt;em&gt;result&lt;/em&gt; according to the following table." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">对于按位运算，<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Xor</strong>&nbsp;运算符对两个数值表达式中的位置相同的位执行按位比较，并且按下表设置&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">result</em>&nbsp;中的相应位。</span></p><table><tbody><tr class="firstRow"><th><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt33" class="sentence" data-guid="5ea26deaf361e90356e78bac57e311f2" data-source="If bit in &lt;em&gt;expression1&lt;/em&gt; is" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">如果&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression1</em>&nbsp;中的位为</span></p></th><th><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt34" class="sentence" data-guid="0c050fecb0df91ce62ade73662527949" data-source="And bit in &lt;em&gt;expression2&lt;/em&gt; is" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">并且&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression2</em>&nbsp;中的位为</span></p></th><th><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt35" class="sentence" data-guid="6af78baf4a7297b685ed66184128e709" data-source="The bit in &lt;em&gt;result&lt;/em&gt; is" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">result</em>&nbsp;中的位为</span></p></th></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt36" class="sentence" data-guid="c4ca4238a0b923820dcc509a6f75849b" data-source="1" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">1</span></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt37" class="sentence" data-guid="c4ca4238a0b923820dcc509a6f75849b" data-source="1" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">1</span></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt38" class="sentence" data-guid="cfcd208495d565ef66e7dff9f98764da" data-source="0" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">0</span></p></td></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt39" class="sentence" data-guid="c4ca4238a0b923820dcc509a6f75849b" data-source="1" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">1</span></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt40" class="sentence" data-guid="cfcd208495d565ef66e7dff9f98764da" data-source="0" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">0</span></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt41" class="sentence" data-guid="c4ca4238a0b923820dcc509a6f75849b" data-source="1" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">1</span></p></td></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt42" class="sentence" data-guid="cfcd208495d565ef66e7dff9f98764da" data-source="0" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">0</span></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt43" class="sentence" data-guid="c4ca4238a0b923820dcc509a6f75849b" data-source="1" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">1</span></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt44" class="sentence" data-guid="c4ca4238a0b923820dcc509a6f75849b" data-source="1" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">1</span></p></td></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt45" class="sentence" data-guid="cfcd208495d565ef66e7dff9f98764da" data-source="0" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">0</span></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt46" class="sentence" data-guid="cfcd208495d565ef66e7dff9f98764da" data-source="0" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">0</span></p></td><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt47" class="sentence" data-guid="cfcd208495d565ef66e7dff9f98764da" data-source="0" xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">0</span></p></td></tr></tbody></table><table><tbody><tr class="firstRow"><th align="left" style="word-break: break-all;"><span style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">&nbsp;</span><span class="alertTitle" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">注意</span></th></tr><tr><td><p style="margin-bottom: 15px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt48" class="sentence" data-guid="b87c60a53932d63fec1bd894292eb327" data-source="Since the logical and bitwise operators have a lower precedence than other arithmetic and relational operators, any bitwise operations should be enclosed in parentheses to ensure accurate execution." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">因为逻辑和按位运算符的优先级低于其他算术和关系运算符，所以应将任何按位运算括在括号中以确保准确执行。</span></p></td></tr></tbody></table><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt49" class="sentence" data-guid="73fbef943b1745d0303cc8cfb23a63e1" data-source="For example, 5 &lt;strong&gt;Xor&lt;/strong&gt; 3 is 6." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">例如，5&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Xor</strong>&nbsp;3 等于 6。</span>&nbsp;<span id="mt50" class="sentence" data-guid="23e6ef168a29d1d99befbd02ecfb17d5" data-source="To see why this is so, convert 5 and 3 to their binary representations, 101 and 011." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">如果要知道其中的来龙去脉，可将 5 和 3 转化为其二进制表示形式 101 和 011，</span>&nbsp;<span id="mt51" class="sentence" data-guid="d7ace3b31cafcce907b9e941f978c2eb" data-source="Then use the previous table to determine that 101 Xor 011 is 110, which is the binary representation of the decimal number 6." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">然后利用前面表格中的规则，可确定 101 Xor 011 等于 110，此结果是十进制数 6 的二进制表示形式。</span></p><p><a class="LW_CollapsibleArea_TitleAhref" title="" id="cb077aef-5368-4066-ab35-224c7f026244" style="margin: 0px; padding: 0px; border: 0px; outline: none; line-height: 18.2px; color: rgb(0, 0, 0); background: transparent;"><img src="https://i-technet.sec.s-msft.com/Areas/Global/Content/clear.gif" border="0" class="cl_collapsiblearea_expand LW_CollapsibleArea_Img" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; width: 15px; height: 14px; overflow: hidden; vertical-align: middle; background: url(&quot;/Areas/Global/Content/ImageSprite.png?v=635914614488597213&quot;) -1627px -3px no-repeat scroll;"/><span class="LW_CollapsibleArea_Title" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; word-break: break-all; word-wrap: break-word; background: transparent;">数据类型</span></a></p><hr class="LW_CollapsibleArea_Hr" style="border-style: none; color: rgb(229, 229, 229);"/><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt53" class="sentence" data-guid="72c27ac5dbc97b72e0f7d2371a592f42" data-source="If the operands consist of one &lt;strong&gt;Boolean&lt;/strong&gt; expression and one numeric expression, Visual Basic converts the &lt;strong&gt;Boolean&lt;/strong&gt; expression to a numeric value (–1 for &lt;strong&gt;True&lt;/strong&gt; and 0 for &lt;strong&gt;False&lt;/strong&gt;) and performs a bitwise operation." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">如果操作数由一个&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;表达式和一个数值表达式组成，则 Visual Basic 将&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;表达式转换为数值（–1 表示&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">True</strong>，0 表示&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">False</strong>），然后执行按位运算。</span></p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt54" class="sentence" data-guid="9b7bb47c9543f72f8c0e5ee07093b0bc" data-source="For a &lt;strong&gt;Boolean&lt;/strong&gt; comparison, the data type of the result is &lt;strong&gt;Boolean&lt;/strong&gt;." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">对于&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>&nbsp;比较，结果的数据类型为&nbsp;<strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Boolean</strong>。</span>&nbsp;<span id="mt55" class="sentence" data-guid="dc673e4d15615f0b77d233dadb2527ce" data-source="For a bitwise comparison, the result data type is a numeric type appropriate for the data types of &lt;em&gt;expression1&lt;/em&gt; and &lt;em&gt;expression2&lt;/em&gt;." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">对于按位比较，结果数据类型是适用于&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression1</em>&nbsp;和&nbsp;<em xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">expression2</em>&nbsp;的数据类型的 numeric 类型。</span>&nbsp;<span id="mt56" class="sentence" data-guid="af6bcd8702271233409fa7d69ae35539" data-source="See the &quot;Relational and Bitwise Comparisons&quot; table in &lt;span class=&quot;mtpsTagOuterHtml&quot; &gt;&lt;span&gt;运算符结果的数据类型 (Visual Basic)&lt;/span&gt;&lt;/span&gt;." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">请参见&nbsp;<a href="https://technet.microsoft.com/zh-cn/subscriptions/ms235255" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; color: rgb(0, 102, 221); text-decoration: none; background: transparent;">运算符结果的数据类型 (Visual Basic)</a>&nbsp;中的表“关系与按位比较”。</span></p><p><a class="LW_CollapsibleArea_TitleAhref" title="" id="ca2f49d9-6b2b-4089-8a49-59f9cf6ae5f6" style="margin: 0px; padding: 0px; border: 0px; outline: none; line-height: 18.2px; color: rgb(0, 0, 0); background: transparent;"><img src="https://i-technet.sec.s-msft.com/Areas/Global/Content/clear.gif" border="0" class="cl_collapsiblearea_expand LW_CollapsibleArea_Img" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; width: 15px; height: 14px; overflow: hidden; vertical-align: middle; background: url(&quot;/Areas/Global/Content/ImageSprite.png?v=635914614488597213&quot;) -1627px -3px no-repeat scroll;"/><span class="LW_CollapsibleArea_Title" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 18.2px; word-break: break-all; word-wrap: break-word; background: transparent;">重载</span></a></p><hr class="LW_CollapsibleArea_Hr" style="border-style: none; color: rgb(229, 229, 229);"/><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><span id="mt58" class="sentence" data-guid="c12364b3657d4d9dbabee7bd5817dd03" data-source="The &lt;strong&gt;Xor&lt;/strong&gt; operator can be &lt;em&gt;overloaded&lt;/em&gt;, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;"><strong xmlns="http://www.w3.org/1999/xhtml" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">Xor</strong>&nbsp;运算符可以被重载，这意味着当操作数具有某个类或结构的类型时，该类或结构可以重新定义其行为。</span>&nbsp;<span id="mt59" class="sentence" data-guid="ab8d1dfa3c58b49e85c02b75f4bc7514" data-source="If your code uses this operator on such a class or structure, make sure you understand its redefined behavior." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">如果代码在这样的类或结构上使用此运算符，那么您一定要了解其重新定义的行为。</span>&nbsp;<span id="mt60" class="sentence" data-guid="147b1f1e4e21f0ab08551ac8a2eab3e7" data-source="For more information, see &lt;span class=&quot;mtpsTagOuterHtml&quot; &gt;&lt;span&gt;运算符过程 (Visual Basic)&lt;/span&gt;&lt;/span&gt;." xml:space="preserve" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; background: transparent;">有关更多信息，请参见&nbsp;<a href="https://technet.microsoft.com/zh-cn/subscriptions/xh17yw4c" style="margin: 0px; padding: 0px; border: 0px; outline: 0px; line-height: 16.64px; color: rgb(0, 102, 221); text-decoration: none; background: transparent;">运算符过程 (Visual Basic)</a>。</span></p><p><br/></p><p><br/></p>', 88, 0, '2016-03-13 20:07:01', '2016-03-13 20:10:38');
INSERT INTO `pppf_article` (`article_id`, `article_reid`, `article_username`, `article_type`, `article_title`, `article_cid`, `article_content`, `article_readcount`, `article_commendcount`, `article_date`, `article_last_modify_date`) VALUES
(79, 0, '9262981', 1, '如何写出高效率的正则表达式', '正则', '<p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">如果纯粹是为了挑战自己的正则水平，用来实现一些特效（例如使用正则表达式计算质数、解线性方程），效率不是问题；如果所写的正则表达式只是为了满足一两次、几十次的运行，优化与否区别也不太大。但是，如果所写的正则表达式会百万次、千万次地运行，效率就是很大的问题了。我这里总结了几条提升正则表达式运行效率的经验（工作中学到的，看书学来的，自己的体会），贴在这里。如果您有其它的经验而这里没有提及，欢迎赐教。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">为行文方便，先定义两个概念。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">误匹配</strong>：指正则表达式所匹配的内容范围超出了所需要范围，有些文本明明不符合要求，但是被所写的正则式“击中了”。例如，如果使用<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">d{11}</span>来匹配11位的手机号，<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">d{11}</span>不单能匹配正确的手机号，它还会匹配<span style="padding: 0px; margin: 0px; color: rgb(204, 51, 204);">98765432100</span>这样的明显不是手机号的字符串。我们把这样的匹配称之为误匹配。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">漏匹配</strong>：指正则表达式所匹配的内容所规定的范围太狭窄，有些文本确实是所需要的，但是所写的正则没有将这种情况囊括在内。例如，使用<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">d{18}</span>来匹配18位的身份证号码，就会漏掉结尾是字母X的情况。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">写出一条正则表达式，既可能<strong style="padding: 0px; margin: 0px;">只出现</strong>误匹配（条件写得极宽松，其范围大于目标文本），也可能<strong style="padding: 0px; margin: 0px;">只出现</strong>漏匹配（只描述了目标文本中多种情况种的一种），还可能<strong style="padding: 0px; margin: 0px;">既有误匹配又有漏匹配</strong>。例如，使用<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">w+.com</span>来匹配.com结尾的域名，既会误匹配<span style="padding: 0px; margin: 0px; color: rgb(204, 51, 204);">abc_.com</span>这样的字串（合法的域名中不含下划线，<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">w</span>包含了下划线这种情况），又会漏掉<span style="padding: 0px; margin: 0px; color: rgb(204, 51, 204);">ab-c.com</span>这样的域名（合法域名中可以含中划线，但是<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">w</span>不匹配中划线）。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">精准的正则表达式意味着既无误匹配且无漏匹配。当然，现实中存在这样的情况：只能看到有限数量的文本，根据这些文本写规则，但是这些规则将会用到海量的文本中。这种情况下，尽可能地（如果不是完全地）消除误匹配以及漏匹配，并提升运行效率，就是我们的目标。本文所提出的经验，主要是针对这种情况。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">掌握语法细节</strong>。正则表达式在各种语言中，其语法大致相同，细节各有千秋。明确所使用语言的正则的语法的细节，是写出正确、高效正则表达式的基础。例如，perl中与<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">w</span>等效的匹配范围是<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">[a-zA-Z0-9_]</span>；perl正则式不支持肯定逆序环视中使用可变的重复（variable repetition inside lookbehind，例如<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">(?&lt;=.*)abc</span>），但是.Net语法是支持这一特性的；又如，JavaScript连逆序环视（Lookbehind,如<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">(?&lt;=ab)c</span>）都不支持，而perl和python是支持的。《精通正则表达式》第3章《正则表达式的特性和流派概览》明确地列出了各大派系正则的异同，这篇文章也简要地列出了几种常用语言、工具中正则的比较。对于具体使用者而言，至少应该详细了解正在使用的那种工作语言里正则的语法细节。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">先粗后精，</strong><strong style="padding: 0px; margin: 0px;">先加后减</strong>。使用正则表达式语法对于目标文本进行描述和界定，可以像画素描一样，先大致勾勒出框架，再逐步在局步实现细节。仍举刚才的手机号的例子，先界定<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">d{11}</span>，总不会错；再细化为<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">1[358]d{9}</span>，就向前迈了一大步（至于第二位是不是3、5、8，这里无意深究，只举这样一个例子，说明逐步细化的过程）。这样做的目的是先消除漏匹配（刚开始先尽可能多地匹配，做加法），然后再一点一点地消除误匹配（做减法）。这样有先有后，在考虑时才不易出错，从而向“不误不漏”这个目标迈进。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">留有余地</strong>。所能看到的文本sample是有限的，而待匹配检验的文本是海量的，暂时不可见的。对于这样的情况，在写正则表达式时要跳出所能见到的文本的圈子，开拓思路，作出“战略性前瞻”。例如，经常收到这样的垃圾短信：“发*票”、“发#漂”。如果要写规则屏蔽这样烦人的垃圾短信，不但要能写出可以匹配当前文本的正则表达式&nbsp;<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">发[*#](?:票|漂)</span>，还要能够想到&nbsp;<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">发.(?:票|漂|飘)</span>之类可能出现的“变种”。这在具体的领域或许会有针对性的规则，不多言。这样做的目的是消除漏匹配，延长正则表达式的生命周期。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">明确</strong>。具体说来，就是<strong style="padding: 0px; margin: 0px;">谨慎</strong>用点号这样的元字符，<strong style="padding: 0px; margin: 0px;">尽可能</strong>不用星号和加号这样的任意量词。只要能确定范围的，例如w，就不要用点号；只要能够预测重复次数的，就不要用任意量词。例如，写析取twitter消息的脚本，假设一条消息的xml正文部分结构是&lt;span class=”msg”&gt;…&lt;/span&gt;且正文中无尖括号，那么<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">&lt;span class=”msg”&gt;[^&lt;]{1,480}&lt;/span&gt;</span>这种写法<strong style="padding: 0px; margin: 0px;">的思路</strong>要好于<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">&lt;span class=”msg”&gt;.*&lt;/span&gt;</span>，原因有二：一是使用<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">[^&lt;]</span>，它保证了文本的范围不会超出下一个小于号所在的位置；二是明确长度范围，<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">{1,480}</span>，其依据是一条twitter消息大致能的字符长度范围。当然，480这个长度是否正确还可推敲，但是这种思路是值得借鉴的。说得狠一点，“滥用点号、星号和加号是不环保、不负责任的做法”。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">不要让稻草压死骆驼</strong>。每使用一个普通括号()而不是非捕获型括号<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">(?:…)</span>，就会保留一部分内存等着你再次访问。这样的正则表达式、无限次地运行次数，无异于一根根稻草的堆加，终于能将骆驼压死。养成合理使用(?:…)括号的习惯。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">宁简勿繁</strong>。将一条复杂的正则表达式拆分为两条或多条简单的正则表达式，编程难度会降低，运行效率会提升。例如用来消除行首和行尾空白字符的正则表达式<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">s/^s+|s+$//g;</span>，其运行效率理论上要低于<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">s/^s+//g; s/s+$//g;</span>&nbsp;。这个例子出自《精通正则表达式》第五章，书中对它的评论是“它几乎总是最快的，而且显然最容易理解”。既快又容易理解，何乐而不为？工作中我们还有其它的理由要将C==<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">(A|B)</span>这样的正则表达式拆为A和B两条表达式分别执行。例如，虽然A和B这两种情况只要有一种能够击中所需要的文本模式就会成功匹配，但是如果只要有一条子表达式（例如A）会产生误匹配，那么不论其它的子表达式（例如B）效率如何之高，范围如何精准，C的总体精准度也会因A而受到影响。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">巧妙定位</strong>。有时候，我们需要匹配的the，是作为单词的the（两边有空格），而不是作为单词一部分的t-h-e的有序排列（例如toge<span style="padding: 0px; margin: 0px; color: rgb(204, 51, 204);">the</span>r中的the）。在适当的时候用上<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">^</span>，<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);">$</span>，<span style="padding: 0px; margin: 0px; color: rgb(51, 102, 255);"></span>等等定位锚点，能有效提升找到成功匹配、淘汰不成功匹配的效率。</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">PS：正则表达式用于字符串处理、表单验证等场合，实用高效。以下表达式本人收集于网络，做了简单整理，以备不时之需。没有全部验证，可能会存在部分错误，读者请自己调试鉴别更正。</strong></p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配中文字符的正则表达式： [u4e00-u9fa5]<br style="padding: 0px; margin: 0px;"/>评注：匹配中文还真是个头疼的事，有了这个表达式就好办了</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配双字节字符(包括汉字在内)：[^x00-xff]<br style="padding: 0px; margin: 0px;"/>评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配空白行的正则表达式：\ns*\r<br style="padding: 0px; margin: 0px;"/>评注：可以用来删除空白行</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配HTML标记的正则表达式：&lt;(S*?)[^&gt;]*&gt;.*?&lt;/1&gt;|&lt;.*? /&gt;<br style="padding: 0px; margin: 0px;"/>评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配首尾空白字符的正则表达式：^s*|s*$<br style="padding: 0px; margin: 0px;"/>评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配Email地址的正则表达式：w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*<br style="padding: 0px; margin: 0px;"/>评注：表单验证时很实用</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配网址URL的正则表达式：[a-zA-z]+://[^s]*<br style="padding: 0px; margin: 0px;"/>评注：网上流传的版本功能很有限，上面这个基本可以满足需求</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$<br style="padding: 0px; margin: 0px;"/>评注：表单验证时很实用</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><span id="more-4458" style="padding: 0px; margin: 0px;"></span></p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配国内电话号码：d{3}-d{8}|d{4}-d{7}<br style="padding: 0px; margin: 0px;"/>评注：匹配形式如 0511-4405222 或 021-87888822</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配腾讯QQ号：[1-9][0-9]{4,}<br style="padding: 0px; margin: 0px;"/>评注：腾讯QQ号从10000开始</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配中国邮政编码：[1-9]d{5}(?!d)<br style="padding: 0px; margin: 0px;"/>评注：中国邮政编码为6位数字</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配身份证：d{15}|d{18}<br style="padding: 0px; margin: 0px;"/>评注：中国的身份证为15位或18位</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配ip地址：d+.d+.d+.d+<br style="padding: 0px; margin: 0px;"/>评注：提取ip地址时有用</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配特定数字：<br style="padding: 0px; margin: 0px;"/>^[1-9]d*$　 　 //匹配正整数<br style="padding: 0px; margin: 0px;"/>^-[1-9]d*$ 　 //匹配负整数<br style="padding: 0px; margin: 0px;"/>^-?[1-9]d*$　　 //匹配整数<br style="padding: 0px; margin: 0px;"/>^[1-9]d*|0$　 //匹配非负整数（正整数 + 0）<br style="padding: 0px; margin: 0px;"/>^-[1-9]d*|0$　　 //匹配非正整数（负整数 + 0）<br style="padding: 0px; margin: 0px;"/>^[1-9]d*.d*|0.d*[1-9]d*$　　 //匹配正浮点数<br style="padding: 0px; margin: 0px;"/>^-([1-9]d*.d*|0.d*[1-9]d*)$　 //匹配负浮点数<br style="padding: 0px; margin: 0px;"/>^-?([1-9]d*.d*|0.d*[1-9]d*|0?.0+|0)$　 //匹配浮点数<br style="padding: 0px; margin: 0px;"/>^[1-9]d*.d*|0.d*[1-9]d*|0?.0+|0$　　 //匹配非负浮点数（正浮点数 + 0）<br style="padding: 0px; margin: 0px;"/>^(-([1-9]d*.d*|0.d*[1-9]d*))|0?.0+|0$　　//匹配非正浮点数（负浮点数 + 0）<br style="padding: 0px; margin: 0px;"/>评注：处理大量数据时有用，具体应用时注意修正</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">匹配特定字符串：<br style="padding: 0px; margin: 0px;"/>^[A-Za-z]+$　　//匹配由26个英文字母组成的字符串<br style="padding: 0px; margin: 0px;"/>^[A-Z]+$　　//匹配由26个英文字母的大写组成的字符串<br style="padding: 0px; margin: 0px;"/>^[a-z]+$　　//匹配由26个英文字母的小写组成的字符串<br style="padding: 0px; margin: 0px;"/>^[A-Za-z0-9]+$　　//匹配由数字和26个英文字母组成的字符串<br style="padding: 0px; margin: 0px;"/>^w+$　　//匹配由数字、26个英文字母或者下划线组成的字符串</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;"><strong style="padding: 0px; margin: 0px;">评注：上面是最基本也是最常用的一些表达式</strong></p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">在使用RegularExpressionValidator验证控件时的验证功能及其验证表达式介绍如下:</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">只能输入数字：“^[0-9]*$”<br style="padding: 0px; margin: 0px;"/>只能输入n位的数字：“^d{n}$”<br style="padding: 0px; margin: 0px;"/>只能输入至少n位数字：“^d{n,}$”<br style="padding: 0px; margin: 0px;"/>只能输入m-n位的数字：“^d{m,n}$”<br style="padding: 0px; margin: 0px;"/>只能输入零和非零开头的数字：“^(0|[1-9][0-9]*)$”<br style="padding: 0px; margin: 0px;"/>只能输入有两位小数的正实数：“^[0-9]+(.[0-9]{2})?$”<br style="padding: 0px; margin: 0px;"/>只能输入有1-3位小数的正实数：“^[0-9]+(.[0-9]{1,3})?$”<br style="padding: 0px; margin: 0px;"/>只能输入非零的正整数：“^+?[1-9][0-9]*$”<br style="padding: 0px; margin: 0px;"/>只能输入非零的负整数：“^-[1-9][0-9]*$”<br style="padding: 0px; margin: 0px;"/>只能输入长度为3的字符：“^.{3}$”<br style="padding: 0px; margin: 0px;"/>只能输入由26个英文字母组成的字符串：“^[A-Za-z]+$”<br style="padding: 0px; margin: 0px;"/>只能输入由26个大写英文字母组成的字符串：“^[A-Z]+$”<br style="padding: 0px; margin: 0px;"/>只能输入由26个小写英文字母组成的字符串：“^[a-z]+$”<br style="padding: 0px; margin: 0px;"/>只能输入由数字和26个英文字母组成的字符串：“^[A-Za-z0-9]+$”<br style="padding: 0px; margin: 0px;"/>只能输入由数字、26个英文字母或者下划线组成的字符串：“^w+$”<br style="padding: 0px; margin: 0px;"/>验证用户密码:“^[a-zA-Z]w{5,17}$”正确格式为：以字母开头，长度在6-18之间，</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">只能包含字符、数字和下划线。<br style="padding: 0px; margin: 0px;"/>验证是否含有^%&amp;’,;=?$”等字符：“[^%&amp;&#39;,;=?$x22]+”<br style="padding: 0px; margin: 0px;"/>只能输入汉字：“^[u4e00-u9fa5],{0,}$”<br style="padding: 0px; margin: 0px;"/>验证Email地址：“^w+[-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*$”<br style="padding: 0px; margin: 0px;"/>验证InternetURL：“^http://([w-]+.)+[w-]+(/[w-./?%&amp;=]*)?$”<br style="padding: 0px; margin: 0px;"/>验证电话号码：“^((d{3,4})|d{3,4}-)?d{7,8}$”</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">正确格式为：“XXXX-XXXXXXX”，“XXXX-XXXXXXXX”，“XXX-XXXXXXX”，</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">“XXX-XXXXXXXX”，“XXXXXXX”，“XXXXXXXX”。<br style="padding: 0px; margin: 0px;"/>验证身份证号（15位或18位数字）：“^d{15}|d{}18$”<br style="padding: 0px; margin: 0px;"/>验证一年的12个月：“^(0?[1-9]|1[0-2])$”正确格式为：“01”-“09”和“1”“12”<br style="padding: 0px; margin: 0px;"/>验证一个月的31天：“^((0?[1-9])|((1|2)[0-9])|30|31)$”</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">正确格式为：“01”“09”和“1”“31”。</p><h2 style="padding: 0px; margin: 10px 0px 0px; font-size: 2em; font-family: &#39;Trebuchet MS&#39;, helvetica, sans-serif; line-height: 1em; color: rgb(0, 34, 0); white-space: normal;">表达式全集</h2><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">正则表达式有多种不同的风格。下表是在PCRE中元字符及其在正则表达式上下文中的行为的一个完整列表：</p><table width="778" cellspacing="1" cellpadding="2"><tbody style="padding: 0px; margin: 0px;"><tr style="padding: 0px; margin: 0px;" class="firstRow"><th style="padding: 0px; margin: 0px;">字符</th><th style="padding: 0px; margin: 0px;">描述</th></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;"></th><td style="padding: 0px; margin: 0px;">将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">n</code>”匹配字符“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">n</code>”。“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">\n</code>”匹配一个换行符。序列“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">\\</code>”匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);"></code>”而“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">(</code>”则匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">(</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">^</th><td style="padding: 0px; margin: 0px;">匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">\n</code>”或“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">\r</code>”之后的位置。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">$</th><td style="padding: 0px; margin: 0px;">匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">\n</code>”或“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">\r</code>”之前的位置。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">*</th><td style="padding: 0px; margin: 0px;">匹配前面的子表达式零次或多次。例如，zo*能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">z</code>”以及“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">zoo</code>”。*等价于{0,}。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">+</th><td style="padding: 0px; margin: 0px;">匹配前面的子表达式一次或多次。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">zo+</code>”能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">zo</code>”以及“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">zoo</code>”，但不能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">z</code>”。+等价于{1,}。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">?</th><td style="padding: 0px; margin: 0px;">匹配前面的子表达式零次或一次。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">do(es)?</code>”可以匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">do</code>”或“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">does</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">do</code>”。?等价于{0,1}。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">{n}</th><td style="padding: 0px; margin: 0px;">n是一个非负整数。匹配确定的n次。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o{2}</code>”不能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Bob</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o</code>”，但是能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">food</code>”中的两个o。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">{n,}</th><td style="padding: 0px; margin: 0px;">n是一个非负整数。至少匹配n次。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o{2,}</code>”不能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Bob</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o</code>”，但能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">foooood</code>”中的所有o。“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o{1,}</code>”等价于“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o+</code>”。“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o{0,}</code>”则等价于“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o*</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">{n,m}</th><td style="padding: 0px; margin: 0px;">m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o{1,3}</code>”将匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">fooooood</code>”中的前三个o。“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o{0,1}</code>”等价于“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o?</code>”。请注意在逗号和两个数之间不能有空格。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">?</th><td style="padding: 0px; margin: 0px;">当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">oooo</code>”，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o+?</code>”将匹配单个“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o</code>”，而“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o+</code>”将匹配所有“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">o</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">.</th><td style="padding: 0px; margin: 0px;">匹配除“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);"></code><code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">n</code>”之外的任何单个字符。要匹配包括“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);"></code><code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">n</code>”在内的任何字符，请使用像“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">[.</code><code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">n</code><code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">]</code>”的模式。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">(pattern)</th><td style="padding: 0px; margin: 0px;">匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">(</code>”或“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">)</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">(?:pattern)</th><td style="padding: 0px; margin: 0px;">匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">(|)</code>”来组合一个模式的各个部分是很有用。例如“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">industr(?:y|ies)</code>”就是一个比“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">industry|industries</code>”更简略的表达式。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">(?=pattern)</th><td style="padding: 0px; margin: 0px;">正向预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);"><a href="http://www.ha97.com/category/microsoft/windows" style="padding: 0px; margin: 0px; color: rgb(0, 102, 0); text-decoration: none; border-bottom-width: 1px; border-bottom-style: dashed; border-bottom-color: rgb(0, 102, 0);">Windows</a>(?=95|98|NT|2000)</code>”能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows2000</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows</code>”，但不能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows3.1</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows</code>”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">(?!pattern)</th><td style="padding: 0px; margin: 0px;">负向预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows(?!95|98|NT|2000)</code>”能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows3.1</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows</code>”，但不能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows2000</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">Windows</code>”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">x|y</th><td style="padding: 0px; margin: 0px;">匹配x或y。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">z|food</code>”能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">z</code>”或“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">food</code>”。“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">(z|f)ood</code>”则匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">zood</code>”或“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">food</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">[xyz]</th><td style="padding: 0px; margin: 0px;">字符集合。匹配所包含的任意一个字符。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">[abc]</code>”可以匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">plain</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">a</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">[^xyz]</th><td style="padding: 0px; margin: 0px;">负值字符集合。匹配未包含的任意字符。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">[^abc]</code>”可以匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">plain</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">p</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">[a-z]</th><td style="padding: 0px; margin: 0px;">字符范围。匹配指定范围内的任意字符。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">[a-z]</code>”可以匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">a</code>”到“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">z</code>”范围内的任意小写字母字符。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">[^a-z]</th><td style="padding: 0px; margin: 0px;">负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">[^a-z]</code>”可以匹配任何不在“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">a</code>”到“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">z</code>”范围内的任意字符。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;"></th><td style="padding: 0px; margin: 0px;">匹配一个单词边界，也就是指单词和空格间的位置。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">er</code>”可以匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">never</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">er</code>”，但不能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">verb</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">er</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">B</th><td style="padding: 0px; margin: 0px;">匹配非单词边界。“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">erB</code>”能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">verb</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">er</code>”，但不能匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">never</code>”中的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">er</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">cx</th><td style="padding: 0px; margin: 0px;">匹配由x指明的控制字符。例如，cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">c</code>”字符。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">d</th><td style="padding: 0px; margin: 0px;">匹配一个数字字符。等价于[0-9]。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">D</th><td style="padding: 0px; margin: 0px;">匹配一个非数字字符。等价于[^0-9]。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">f</th><td style="padding: 0px; margin: 0px;">匹配一个换页符。等价于x0c和cL。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">\n</th><td style="padding: 0px; margin: 0px;">匹配一个换行符。等价于x0a和cJ。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">\r</th><td style="padding: 0px; margin: 0px;">匹配一个回车符。等价于x0d和cM。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">s</th><td style="padding: 0px; margin: 0px;">匹配任何空白字符，包括空格、制表符、换页符等等。等价于[f\n\r	v]。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">S</th><td style="padding: 0px; margin: 0px;">匹配任何非空白字符。等价于[^f\n\r	v]。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">	</th><td style="padding: 0px; margin: 0px;">匹配一个制表符。等价于x09和cI。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">v</th><td style="padding: 0px; margin: 0px;">匹配一个垂直制表符。等价于x0b和cK。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">w</th><td style="padding: 0px; margin: 0px;">匹配包括下划线的任何单词字符。等价于“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">[A-Za-z0-9_]</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">W</th><td style="padding: 0px; margin: 0px;">匹配任何非单词字符。等价于“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">[^A-Za-z0-9_]</code>”。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">xn</th><td style="padding: 0px; margin: 0px;">匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">x41</code>”匹配“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">A</code>”。“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">x041</code>”则等价于“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">x04&amp;1</code>”。正则表达式中可以使用ASCII编码。.</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">\num</th><td style="padding: 0px; margin: 0px;">匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“<code style="padding: 0px; margin: 0px; font-size: 12px; background-color: rgb(238, 238, 238);">(.)1</code>”匹配两个连续的相同字符。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">\n</th><td style="padding: 0px; margin: 0px;">标识一个八进制转义值或一个向后引用。如果\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">\nm</th><td style="padding: 0px; margin: 0px;">标识一个八进制转义值或一个向后引用。如果\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\nm将匹配八进制转义值nm。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">\nml</th><td style="padding: 0px; margin: 0px;">如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。</td></tr><tr style="padding: 0px; margin: 0px;"><th style="padding: 0px; margin: 0px;">un</th><td style="padding: 0px; margin: 0px;">匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，u00A9匹配版权符号（?）。</td></tr></tbody></table><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">以下是以PHP的语法所写的示例</p><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">验证字符串是否只含数字与英文，字符串长度并在4~16个字符之间</p><pre style="padding: 0px; margin-top: 0px; margin-bottom: 0px;">&lt;?php$str&nbsp;=&nbsp;&#39;a1234&#39;;if&nbsp;(preg_match(&quot;^[a-zA-Z0-9]{4,16}$&quot;,&nbsp;$str))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;驗證成功&quot;;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;驗證失敗&quot;;}?&gt;</pre><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">简易的台湾身份证字号验证</p><pre style="padding: 0px; margin-top: 0px; margin-bottom: 0px;">&lt;?php$str&nbsp;=&nbsp;&#39;a1234&#39;;if&nbsp;(preg_match(&quot;/^w[12]d{8}$/&quot;,&nbsp;$str))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;驗證成功&quot;;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;驗證失敗&quot;;}?&gt;</pre><p style="padding: 0px; margin-top: 1.2em; margin-bottom: 1.2em; line-height: 1.5em; color: rgb(0, 34, 0); font-family: georgia; font-size: 15px; white-space: normal;">以下示例是用 Perl 语言写的，与上面的示例功能相同</p><pre style="padding: 0px; margin-top: 0px; margin-bottom: 0px;">print&nbsp;$str&nbsp;=&nbsp;&quot;a1234&quot;&nbsp;=~&nbsp;m:^[a-zA-Z0-9]{4,16}$:&nbsp;?&nbsp;&quot;COMFIRM&quot;&nbsp;:&nbsp;&quot;FAILED&quot;;</pre><pre style="padding: 0px; margin-top: 0px; margin-bottom: 0px;">print&nbsp;$str&nbsp;=&nbsp;&quot;a1234&quot;&nbsp;=~&nbsp;m&quot;^w[12]d{8}$&quot;&nbsp;?&nbsp;&quot;COMFIRM&quot;&nbsp;:&nbsp;&quot;INVAILD&quot;;</pre><p><br/></p>', 46, 0, '2016-03-13 11:05:22', '0000-00-00 00:00:00');
INSERT INTO `pppf_article` (`article_id`, `article_reid`, `article_username`, `article_type`, `article_title`, `article_cid`, `article_content`, `article_readcount`, `article_commendcount`, `article_date`, `article_last_modify_date`) VALUES
(76, 0, '9262981', 1, 'ECMAScript 位运算符', 'javascript', '<p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;"><span style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px; font-weight: 800;">位运算符是在数字底层（即表示数字的 32 个数位）进行操作的。</span></p><h2 style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px;">重温整数</h2><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">ECMAScript 整数有两种类型，即有符号整数（允许用正数和负数）和无符号整数（只允许用正数）。在 ECMAScript 中，所有整数字面量默认都是有符号整数，这意味着什么呢？</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">有符号整数使用 31 位表示整数的数值，用第 32 位表示整数的符号，0 表示正数，1 表示负数。数值范围从 -2147483648 到 2147483647。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">可以以两种不同的方式存储二进制形式的有符号整数，一种用于存储正数，一种用于存储负数。正数是以真二进制形式存储的，前 31 位中的每一位都表示 2 的幂，从第 1 位（位 0）开始，表示 2<sup style="margin: 0px; padding: 0px; border: 0px;">0</sup>，第 2 位（位 1）表示 2<sup style="margin: 0px; padding: 0px; border: 0px;">1</sup>。没用到的位用 0 填充，即忽略不计。例如，下图展示的是数 18 的表示法。</p><p><img src="http://www.w3school.com.cn/i/ct_js_integer_binary_signed_32bits.gif" alt="32 位二进制表示的有符号整数" style="margin: 25px 0px 0px 25px; padding: 0px; border: 0px;"/></p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">18 的二进制版本只用了前 5 位，它们是这个数字的有效位。把数字转换成二进制字符串，就能看到有效位：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iNum&nbsp;=&nbsp;18;\r\nalert(iNum.toString(2));	//输出&nbsp;&quot;10010&quot;</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">这段代码只输出 &quot;10010&quot;，而不是 18 的 32 位表示。其他的数位并不重要，因为仅使用前 5 位即可确定这个十进制数值。如下图所示：</p><p><img src="http://www.w3school.com.cn/i/ct_js_integer_binary_number18.gif" alt="5 位二进制表示的整数 18" style="margin: 25px 0px 0px 25px; padding: 0px; border: 0px;"/></p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">负数也存储为二进制代码，不过采用的形式是二进制补码。计算数字二进制补码的步骤有三步：</p><ol style="margin-top: 10px; margin-left: 35px; padding: 0px; border: 0px;" class=" list-paddingleft-2"><li><p>确定该数字的非负版本的二进制表示（例如，要计算 -18的二进制补码，首先要确定 18 的二进制表示）</p></li><li><p>求得二进制反码，即要把 0 替换为 1，把 1 替换为 0</p></li><li><p>在二进制反码上加 1</p></li></ol><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">要确定 -18 的二进制表示，首先必须得到 18 的二进制表示，如下所示：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0001&nbsp;0010</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">接下来，计算二进制反码，如下所示：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1110&nbsp;1101</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">最后，在二进制反码上加 1，如下所示：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1110&nbsp;1101\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1\r\n---------------------------------------\r\n1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1111&nbsp;1110&nbsp;1110</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">因此，-18 的二进制表示即 1111 1111 1111 1111 1111 1111 1110 1110。记住，在处理有符号整数时，开发者不能访问 31 位。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">有趣的是，把负整数转换成二进制字符串后，ECMAScript 并不以二进制补码的形式显示，而是用数字绝对值的标准二进制代码前面加负号的形式输出。例如：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iNum&nbsp;=&nbsp;-18;\r\nalert(iNum.toString(2));	//输出&nbsp;&quot;-10010&quot;</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">这段代码输出的是 &quot;-10010&quot;，而非二进制补码，这是为避免访问位 31。为了简便，ECMAScript 用一种简单的方式处理整数，使得开发者不必关心它们的用法。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">另一方面，无符号整数把最后一位作为另一个数位处理。在这种模式中，第 32 位不表示数字的符号，而是值 2<sup style="margin: 0px; padding: 0px; border: 0px;">31</sup>。由于这个额外的位，无符号整数的数值范围为 0 到 4294967295。对于小于 2147483647 的整数来说，无符号整数看来与有符号整数一样，而大于 2147483647 的整数则要使用位 31（在有符号整数中，这一位总是 0）。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">把无符号整数转换成字符串后，只返回它们的有效位。</p><p class="important" style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;"><span style="margin: 0px; padding: 0px; border: 0px; font-weight: bold; color: rgb(221, 0, 0);">注意：</span>所有整数字面量都默认存储为有符号整数。只有 ECMAScript 的位运算符才能创建无符号整数。</p><h2 style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px;">位运算 NOT</h2><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">位运算 NOT 由否定号（~）表示，它是 ECMAScript 中为数不多的与二进制算术有关的运算符之一。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">位运算 NOT 是三步的处理过程：</p><ol style="margin-top: 10px; margin-left: 35px; padding: 0px; border: 0px;" class=" list-paddingleft-2"><li><p>把运算数转换成 32 位数字</p></li><li><p>把二进制数转换成它的二进制反码</p></li><li><p>把二进制数转换成浮点数</p></li></ol><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">例如：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iNum1&nbsp;=&nbsp;25;		//25&nbsp;等于&nbsp;00000000000000000000000000011001var&nbsp;iNum2&nbsp;=&nbsp;~iNum1;	//转换为&nbsp;11111111111111111111111111100110alert(iNum2);		//输出&nbsp;&quot;-26&quot;</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">位运算 NOT 实质上是对数字求负，然后减 1，因此 25 变 -26。用下面的方法也可以得到同样的方法：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iNum1&nbsp;=&nbsp;25;\r\nvar&nbsp;iNum2&nbsp;=&nbsp;-iNum1&nbsp;-1;\r\nalert(iNum2);	//输出&nbsp;-26</pre><h2 style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px;">位运算 AND</h2><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">位运算 AND 由和号（&amp;）表示，直接对数字的二进制形式进行运算。它把每个数字中的数位对齐，然后用下面的规则对同一位置上的两个数位进行 AND 运算：</p><table class="dataintable" width="709"><tbody style="margin: 0px; padding: 0px; border: 0px;"><tr style="margin: 0px; padding: 0px; border: 0px;" class="firstRow"><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">第一个数字中的数位</th><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">第二个数字中的数位</th><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">结果</th></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td></tr></tbody></table><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">例如，要对数字 25 和 3 进行 AND 运算，代码如下所示：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iResult&nbsp;=&nbsp;25&nbsp;&amp;&nbsp;3;\r\nalert(iResult);	//输出&nbsp;&quot;1&quot;</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">25 和 3 进行 AND 运算的结果是 1。为什么？分析如下：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">&nbsp;25&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0001&nbsp;1001\r\n&nbsp;&nbsp;3&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0011\r\n---------------------------------------------\r\nAND&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0001</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">可以看出，在 25 和 3 中，只有一个数位（位 0）存放的都是 1，因此，其他数位生成的都是 0，所以结果为 1。</p><h2 style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px;">位运算 OR</h2><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">位运算 OR 由符号（|）表示，也是直接对数字的二进制形式进行运算。在计算每位时，OR 运算符采用下列规则：</p><table class="dataintable" width="709"><tbody style="margin: 0px; padding: 0px; border: 0px;"><tr style="margin: 0px; padding: 0px; border: 0px;" class="firstRow"><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">第一个数字中的数位</th><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">第二个数字中的数位</th><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">结果</th></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td></tr></tbody></table><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">仍然使用 AND 运算符所用的例子，对 25 和 3 进行 OR 运算，代码如下：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iResult&nbsp;=&nbsp;25&nbsp;|&nbsp;3;\r\nalert(iResult);	//输出&nbsp;&quot;27&quot;</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">25 和 3 进行 OR 运算的结果是 27：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">25&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0001&nbsp;1001\r\n&nbsp;3&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0011\r\n--------------------------------------------\r\nOR&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0001&nbsp;1011</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">可以看出，在两个数字中，共有 4 个数位存放的是 1，这些数位被传递给结果。二进制代码 11011 等于 27。</p><h2 style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px;">位运算 XOR</h2><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">位运算 XOR 由符号（^）表示，当然，也是直接对二进制形式进行运算。XOR 不同于 OR，当只有一个数位存放的是 1 时，它才返回 1。真值表如下：</p><table class="dataintable" width="709"><tbody style="margin: 0px; padding: 0px; border: 0px;"><tr style="margin: 0px; padding: 0px; border: 0px;" class="firstRow"><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">第一个数字中的数位</th><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">第二个数字中的数位</th><th style="margin: 0px; padding-right: 15px; padding-left: 6px; border-color: rgb(170, 170, 170); vertical-align: baseline; background-color: rgb(213, 213, 213);">结果</th></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">1</td></tr><tr style="margin: 0px; padding: 0px; border: 0px;"><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td><td style="margin: 0px; padding: 6px 15px 6px 6px; border-color: rgb(170, 170, 170); vertical-align: text-top; background-color: rgb(239, 239, 239);">0</td></tr></tbody></table><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">对 25 和 3 进行 XOR 运算，代码如下：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iResult&nbsp;=&nbsp;25&nbsp;^&nbsp;3;\r\nalert(iResult);	//输出&nbsp;&quot;26&quot;</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">25 和 3 进行 XOR 运算的结果是 26：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">&nbsp;25&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0001&nbsp;1001\r\n&nbsp;&nbsp;3&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0011\r\n---------------------------------------------\r\nXOR&nbsp;=&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0000&nbsp;0001&nbsp;1010</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">可以看出，在两个数字中，共有 4 个数位存放的是 1，这些数位被传递给结果。二进制代码 11010 等于 26。</p><h2 style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px;">左移运算</h2><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">左移运算由两个小于号表示（&lt;&lt;）。它把数字中的所有数位向左移动指定的数量。例如，把数字 2（等于二进制中的 10）左移 5 位，结果为 64（等于二进制中的 1000000）：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iOld&nbsp;=&nbsp;2;		//等于二进制&nbsp;10var&nbsp;iNew&nbsp;=&nbsp;iOld&nbsp;&lt;&lt;&nbsp;5;	//等于二进制&nbsp;1000000&nbsp;十进制&nbsp;64</pre><p class="important" style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;"><span style="margin: 0px; padding: 0px; border: 0px; font-weight: bold; color: rgb(221, 0, 0);">注意：</span>在左移数位时，数字右边多出 5 个空位。左移运算用 0 填充这些空位，使结果成为完整的 32 位数字。</p><p><img src="http://www.w3school.com.cn/i/ct_js_operators_bitwise_leftshift.gif" alt="数字 2 进行左移运算" style="margin: 25px 0px 0px 25px; padding: 0px; border: 0px;"/></p><p class="important" style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;"><span style="margin: 0px; padding: 0px; border: 0px; font-weight: bold; color: rgb(221, 0, 0);">注意：</span>左移运算保留数字的符号位。例如，如果把 -2 左移 5 位，得到的是 -64，而不是 64。“符号仍然存储在第 32 位中吗？”是的，不过这在 ECMAScript 后台进行，开发者不能直接访问第 32 个数位。即使输出二进制字符串形式的负数，显示的也是负号形式（例如，-2 将显示 -10。）</p><h2 style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px;">有符号右移运算</h2><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">有符号右移运算符由两个大于号表示（&gt;&gt;）。它把 32 位数字中的所有数位整体右移，同时保留该数的符号（正号或负号）。有符号右移运算符恰好与左移运算相反。例如，把 64 右移 5 位，将变为 2：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iOld&nbsp;=&nbsp;64;		//等于二进制&nbsp;1000000var&nbsp;iNew&nbsp;=&nbsp;iOld&nbsp;&gt;&gt;&nbsp;5;	//等于二进制&nbsp;10&nbsp;十进制&nbsp;2</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">同样，移动数位后会造成空位。这次，空位位于数字的左侧，但位于符号位之后。ECMAScript 用符号位的值填充这些空位，创建完整的数字，如下图所示：</p><p><img src="http://www.w3school.com.cn/i/ct_js_operators_bitwise_signedrightshift.gif" alt="数字 64 进行有符号右移运算" style="margin: 25px 0px 0px 25px; padding: 0px; border: 0px;"/></p><h2 style="margin: 0px; padding: 0px; border: 0px; font-family: 微软雅黑; font-size: 14px;">无符号右移运算</h2><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">无符号右移运算符由三个大于号（&gt;&gt;&gt;）表示，它将无符号 32 位数的所有数位整体右移。对于正数，无符号右移运算的结果与有符号右移运算一样。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">用有符号右移运算中的例子，把 64 右移 5 位，将变为 2：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iOld&nbsp;=&nbsp;64;		//等于二进制&nbsp;1000000var&nbsp;iNew&nbsp;=&nbsp;iOld&nbsp;&gt;&gt;&gt;&nbsp;5;	//等于二进制&nbsp;10&nbsp;十进制&nbsp;2</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">对于负数，情况就不同了。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">无符号右移运算用 0 填充所有空位。对于正数，这与有符号右移运算的操作一样，而负数则被作为正数来处理。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">由于无符号右移运算的结果是一个 32 位的正数，所以负数的无符号右移运算得到的总是一个非常大的数字。例如，如果把 -64 右移 5 位，将得到 134217726。如何得到这种结果的呢？</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">要实现这一点，需要把这个数字转换成无符号的等价形式（尽管该数字本身还是有符号的），可以通过以下代码获得这种形式：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">var&nbsp;iUnsigned64&nbsp;=&nbsp;-64&nbsp;&gt;&gt;&gt;&nbsp;0;</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">然后，用 Number 类型的 toString() 获取它的真正的位表示，采用的基为 2：</p><pre style="margin-top: 10px; margin-bottom: 0px; padding: 10px; border: 1px dotted rgb(119, 136, 85); font-family: Consolas, &#39;Courier New&#39;, Courier, monospace; width: 685px; background-color: rgb(245, 245, 245);">alert(iUnsigned64.toString(2));</pre><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">这将生成 11111111111111111111111111000000，即有符号整数 -64 的二进制补码表示，不过它等于无符号整数 4294967232。</p><p style="margin-top: 12px; margin-bottom: 0px; padding: 0px; border: 0px; line-height: 18px;">出于这种原因，使用无符号右移运算符要小心。</p><p><br/></p>', 146, 0, '2016-03-13 06:22:20', '2016-03-13 21:13:51'),
(77, 0, '9262981', 1, 'PHP常用正则表达式汇总 ', '正则', '<p><strong>平时做网站经常要用正则表达式，下面是一些讲解和例子，仅供大家参考和修改使用：</strong></p><p>（网上收集，有些乱，会逐渐整理）</p><p>==============<br/>1、非负整数：^\\d+$&nbsp;<br/>&nbsp;2、正整数：^[0-9]*[1-9][0-9]*$&nbsp;<br/>3、非正整数：^((-\\d+)|(0+))$&nbsp;<br/>4、负整数：^-[0-9]*[1-9][0-9]*$&nbsp;&nbsp;<br/>5、整数：^-?\\d+$&nbsp;<br/>6、非负浮点数：^\\d+(\\.\\d+)?$&nbsp;<br/>7、正浮点数：^((0-9)+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$<br/>8、非正浮点数：^((-\\d+\\.\\d+)?)|(0+(\\.0+)?))$&nbsp;<br/>9、负浮点数：^(-((正浮点数正则式)))$&nbsp;<br/>10、英文字符串：^[A-Za-z]+$&nbsp;<br/>11、英文大写串：^[A-Z]+$&nbsp;<br/>12、英文小写串：^[a-z]+$&nbsp;<br/>13、英文字符数字串：^[A-Za-z0-9]+$&nbsp;<br/>14、英数字加下划线串：^\\w+$&nbsp;<br/>15、E-mail地址：^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$&nbsp;<br/>16、URL：^[a-zA-Z]+://(\\w+(-\\w+)*)(\\.(\\w+(-\\w+)*))*(\\?\\s*)?$&nbsp;<br/>或：^http:\\/\\/[A-Za-z0-9]+\\.[A-Za-z0-9]+[\\/=\\?%\\-&amp;_~`@[\\]\\&#39;:+!]*([^&lt;&gt;\\&quot;\\&quot;])*$&nbsp;<br/>17、邮政编码：^[1-9]\\d{5}$&nbsp;<br/>18、中文：^[\\u0391-\\uFFE5]+$&nbsp;<br/>19、电话号码：^((<span class="MathJax_Preview" style="color: rgb(136, 136, 136);"></span><span class="MathJax" id="MathJax-Element-1-Frame" role="textbox" aria-readonly="true" style="display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px;"><nobr style="transition: none; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;"><span class="math" id="MathJax-Span-1" style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.098em;"><span style="transition: none; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 2.562em; height: 0px; font-size: 16.8px;"><span style="transition: none; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.789em 1000em 3.158em -0.533em); top: -2.735em; left: 0.003em;"><span class="mrow" id="MathJax-Span-2" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mtext" id="MathJax-Span-3" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main; color: red;">\\d</span><span class="texatom" id="MathJax-Span-4" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mrow" id="MathJax-Span-5" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mn" id="MathJax-Span-6" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">2</span><span class="mo" id="MathJax-Span-7" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">,</span><span class="mn" id="MathJax-Span-8" style="transition: none; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.182em; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">3</span></span></span></span><span style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.741em;"></span></span></span><span style="transition: none; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.361em;"></span></span></nobr></span>)|(\\d{3}\\-))?(<span class="MathJax_Preview" style="color: rgb(136, 136, 136);"></span><span class="MathJax" id="MathJax-Element-2-Frame" role="textbox" aria-readonly="true" style="display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px;"><nobr style="transition: none; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;"><span class="math" id="MathJax-Span-9" style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.693em;"><span style="transition: none; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.039em; height: 0px; font-size: 16.8px;"><span style="transition: none; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.789em 1000em 3.158em -0.473em); top: -2.735em; left: 0.003em;"><span class="mrow" id="MathJax-Span-10" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mn" id="MathJax-Span-11" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">0</span><span class="mtext" id="MathJax-Span-12" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main; color: red;">\\d</span><span class="texatom" id="MathJax-Span-13" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mrow" id="MathJax-Span-14" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mn" id="MathJax-Span-15" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">2</span><span class="mo" id="MathJax-Span-16" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">,</span><span class="mn" id="MathJax-Span-17" style="transition: none; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.182em; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">3</span></span></span></span><span style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.741em;"></span></span></span><span style="transition: none; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.361em;"></span></span></nobr></span>|0\\d{2,3}-)?[1-9]\\d{6,7}(\\-\\d{1,4})?$<br/>20、手机号码：^((<span class="MathJax_Preview" style="color: rgb(136, 136, 136);"></span><span class="MathJax" id="MathJax-Element-3-Frame" role="textbox" aria-readonly="true" style="display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px;"><nobr style="transition: none; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;"><span class="math" id="MathJax-Span-18" style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.098em;"><span style="transition: none; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 2.562em; height: 0px; font-size: 16.8px;"><span style="transition: none; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.789em 1000em 3.158em -0.533em); top: -2.735em; left: 0.003em;"><span class="mrow" id="MathJax-Span-19" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mtext" id="MathJax-Span-20" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main; color: red;">\\d</span><span class="texatom" id="MathJax-Span-21" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mrow" id="MathJax-Span-22" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mn" id="MathJax-Span-23" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">2</span><span class="mo" id="MathJax-Span-24" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">,</span><span class="mn" id="MathJax-Span-25" style="transition: none; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.182em; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">3</span></span></span></span><span style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.741em;"></span></span></span><span style="transition: none; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.361em;"></span></span></nobr></span>)|(\\d{3}\\-))?13\\d{9}$&nbsp;<br/>21、双字节字符(包括汉字在内)：^\\x00-\\xff&nbsp;<br/>22、匹配首尾空格：(^\\s*)|(\\s*$)（像vbscript那样的trim函数）&nbsp;<br/>23、匹配HTML标记：&lt;(.*)&gt;.*&lt;\\/\\1&gt;|&lt;(.*) \\/&gt;&nbsp;<br/>24、匹配空行：\\n[\\s| ]*\\r&nbsp;<br/>25、提取信息中的网络链接：(h|H)(r|R)(e|E)(f|F) *= *(&#39;|&quot;)?(\\w|\\\\|\\/|\\.)+(&#39;|&quot;| *|&gt;)?&nbsp;<br/>26、提取信息中的邮件地址：\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*&nbsp;<br/>27、提取信息中的图片链接：(s|S)(r|R)(c|C) *= *(&#39;|&quot;)?(\\w|\\\\|\\/|\\.)+(&#39;|&quot;| *|&gt;)?&nbsp;<br/>28、提取信息中的IP地址：(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)&nbsp;<br/>29、提取信息中的中国手机号码：(86)*0*13\\d{9}&nbsp;<br/>30、提取信息中的中国固定电话号码：(<span class="MathJax_Preview" style="color: rgb(136, 136, 136);"></span><span class="MathJax" id="MathJax-Element-4-Frame" role="textbox" aria-readonly="true" style="display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px;"><nobr style="transition: none; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;"><span class="math" id="MathJax-Span-26" style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.098em;"><span style="transition: none; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 2.562em; height: 0px; font-size: 16.8px;"><span style="transition: none; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.789em 1000em 3.158em -0.533em); top: -2.735em; left: 0.003em;"><span class="mrow" id="MathJax-Span-27" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mtext" id="MathJax-Span-28" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main; color: red;">\\d</span><span class="texatom" id="MathJax-Span-29" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mrow" id="MathJax-Span-30" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mn" id="MathJax-Span-31" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">3</span><span class="mo" id="MathJax-Span-32" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">,</span><span class="mn" id="MathJax-Span-33" style="transition: none; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.182em; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">4</span></span></span></span><span style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.741em;"></span></span></span><span style="transition: none; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.361em;"></span></span></nobr></span>|\\d{3,4}-|\\s)?\\d{8}&nbsp;<br/>31、提取信息中的中国电话号码（包括移动和固定电话）：(<span class="MathJax_Preview" style="color: rgb(136, 136, 136);"></span><span class="MathJax" id="MathJax-Element-5-Frame" role="textbox" aria-readonly="true" style="display: inline; line-height: normal; word-spacing: normal; word-wrap: normal; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px;"><nobr style="transition: none; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px;"><span class="math" id="MathJax-Span-34" style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 3.098em;"><span style="transition: none; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 2.562em; height: 0px; font-size: 16.8px;"><span style="transition: none; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; clip: rect(1.789em 1000em 3.158em -0.533em); top: -2.735em; left: 0.003em;"><span class="mrow" id="MathJax-Span-35" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mtext" id="MathJax-Span-36" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main; color: red;">\\d</span><span class="texatom" id="MathJax-Span-37" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mrow" id="MathJax-Span-38" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px;"><span class="mn" id="MathJax-Span-39" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">3</span><span class="mo" id="MathJax-Span-40" style="transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">,</span><span class="mn" id="MathJax-Span-41" style="transition: none; display: inline; position: static; border: 0px; padding: 0px 0px 0px 0.182em; margin: 0px; vertical-align: 0px; font-family: MathJax_Main;">4</span></span></span></span><span style="transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; width: 0px; height: 2.741em;"></span></span></span><span style="transition: none; display: inline-block; position: static; border-width: 0px 0px 0px 0.004em; border-left-style: solid; border-color: initial; padding: 0px; margin: 0px; vertical-align: -0.354em; overflow: hidden; width: 0px; height: 1.361em;"></span></span></nobr></span>|\\d{3,4}-|\\s)?\\d{7,14}&nbsp;<br/>32、提取信息中的中国邮政编码：[1-9]{1}(\\d+){5}&nbsp;<br/>33、提取信息中的浮点数（即小数）：(-?\\d*)\\.?\\d+&nbsp;<br/>34、提取信息中的任何数字 ：(-?\\d*)(\\.\\d+)?&nbsp;<br/>35、IP：(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)&nbsp;<br/>36、电话区号：/^0\\d{2,3}$/&nbsp;<br/>37、腾讯QQ号：^[1-9]*[1-9][0-9]*$&nbsp;<br/>38、帐号(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$&nbsp;<br/>39、中文、英文、数字及下划线：^[\\u4e00-\\u9fa5_a-zA-Z0-9]+$<br/>40、sql语句：^(select|drop|delete|create|update|insert).*$</p><p><br/></p>', 50, 0, '2016-03-13 10:50:44', '2016-03-13 11:03:27');
INSERT INTO `pppf_article` (`article_id`, `article_reid`, `article_username`, `article_type`, `article_title`, `article_cid`, `article_content`, `article_readcount`, `article_commendcount`, `article_date`, `article_last_modify_date`) VALUES
(78, 0, '9262981', 1, '最常用的PHP正则表达式收集整理', '正则', '<p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">正则表达式用于字符串处理、表单验证等场合，实用高效。本文收集了一些常用的表达式：</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">$str&nbsp;=&nbsp;preg_replace(&quot;/(&lt;a.*?&gt;)(.*?)(&lt;/a&gt;)/&quot;,&nbsp;&#39;1&lt;span&gt;2&lt;/span&gt;3&#39;,&nbsp;$str);</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">其中用了三个子模式（每个圆括号中内容为一个子模式），第一个是链接开始标签，第二个是链接文本，第三个是&lt;/a&gt;</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">然后第二个参数中1、2、3就表示这三个部分，要替换成什么样子还不简单？</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">获取页面中的所有链接地址的PHP函数</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">下面这个用PHP写的函数,可以获取任意的字符串$string中的所有链接地址($string可以是从一个HTML页面文件直接读取出来的字符串),结果保存在一个数组中返回.该函数自动把电子邮件地址排除在外,而且返回的数组中不会有重复元素.</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">function&nbsp;GetAllLink($string)&nbsp;\r\n{&nbsp;\r\n$string&nbsp;=&nbsp;str_replace(&quot;\r&quot;,&quot;&quot;,$string);&nbsp;\r\n$string&nbsp;=&nbsp;str_replace(&quot;\n&quot;,&quot;&quot;,$string);&nbsp;\r\n\r\n$regex[url]&nbsp;=&nbsp;&quot;((http|https|ftp|telnet|news)://)?([a-z0-9_-/.]+.[][a-z0-9:;&amp;#@=_~%?/.,+-]+)&quot;;&nbsp;\r\n$regex[email]&nbsp;=&nbsp;&quot;([a-z0-9_-]+)@([a-z0-9_-]+.[a-z0-9-._-]+)&quot;;&nbsp;\r\n\r\n//去掉标签之间的文字&nbsp;\r\n$string&nbsp;=&nbsp;eregi_replace(&quot;&gt;[^&lt;&gt;]+&lt;&quot;,&quot;&gt;&lt;&quot;,&nbsp;$string);&nbsp;\r\n\r\n//去掉JAVASCRIPT代码&nbsp;\r\n$string&nbsp;=&nbsp;eregi_replace(&quot;&lt;!--.*//--&gt;&quot;,&quot;&quot;,&nbsp;$string);&nbsp;\r\n\r\n//去掉非&lt;a&gt;的HTML标签&nbsp;\r\n$string&nbsp;=&nbsp;eregi_replace(&quot;&lt;[^a][^&lt;&gt;]*&gt;&quot;,&quot;&quot;,&nbsp;$string);&nbsp;\r\n\r\n//去掉EMAIL链接&nbsp;\r\n$string&nbsp;=&nbsp;eregi_replace(&quot;&lt;a([&nbsp;]+)href=([&quot;&#39;]*)mailto:($regex[email])([&quot;&#39;]*)[^&gt;]*&gt;&quot;,&quot;&quot;,&nbsp;$string);&nbsp;\r\n\r\n//替换需要的网页链接&nbsp;\r\n$string&nbsp;=&nbsp;eregi_replace(&quot;&lt;a([&nbsp;]+)href=([&quot;&#39;]*)($regex[url])([&quot;&#39;]*)[^&gt;]*&gt;&quot;,&quot;\\3	&quot;,&nbsp;$string);&nbsp;\r\n\r\n$output[0]&nbsp;=&nbsp;strtok($string,&nbsp;&quot;	&quot;);&nbsp;\r\nwhile(($temp&nbsp;=&nbsp;strtok(&quot;	&quot;)))&nbsp;\r\n{&nbsp;\r\nif($temp&nbsp;&amp;&amp;&nbsp;!in_array($temp,&nbsp;$output))&nbsp;\r\n$output[++$i]&nbsp;=&nbsp;$temp;&nbsp;\r\n}&nbsp;\r\n\r\nreturn&nbsp;$output;&nbsp;\r\n}</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">以下是以PHP的语法所写的示例</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">验证字符串是否只含数字与英文，字符串长度并在4~16个字符之间</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">&lt;?php&nbsp;\r\n$str&nbsp;=&nbsp;&#39;a1234&#39;;&nbsp;\r\nif&nbsp;(preg_match(&quot;^[a-zA-Z0-9]{4,16}$&quot;,&nbsp;$str))&nbsp;{&nbsp;\r\necho&nbsp;&quot;验证成功&quot;;}&nbsp;else&nbsp;{&nbsp;\r\necho&nbsp;&quot;验证失敗&quot;;}?&gt;</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">简易的台湾身分证字号验证</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">&lt;?php&nbsp;\r\n$str&nbsp;=&nbsp;&#39;a1234&#39;;&nbsp;\r\nif&nbsp;(preg_match(&quot;^(?:d{15}|d{18})$&quot;,&nbsp;$str))&nbsp;{&nbsp;\r\necho&nbsp;&quot;验证成功&quot;;&nbsp;\r\n}&nbsp;else&nbsp;{&nbsp;\r\necho&nbsp;&quot;验证失敗&quot;;}&nbsp;\r\n?&gt;</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">下面的代码实现文字中的代码块，功能就如你在脚本之家看到的代码一样。</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">function&nbsp;codedisp($code)&nbsp;{&nbsp;\r\nglobal&nbsp;$discuzcodes;&nbsp;\r\n$discuzcodes[&#39;pcodecount&#39;]++;&nbsp;\r\n$code&nbsp;=&nbsp;htmlspecialchars(str_replace(&#39;\\&quot;&#39;,&nbsp;&#39;&quot;&#39;,&nbsp;preg_replace(&quot;/^[\n\r]*(.+?)[\n\r]*$/is&quot;,&nbsp;&quot;\\1&quot;,&nbsp;$code)));&nbsp;\r\n$discuzcodes[&#39;codehtml&#39;][$discuzcodes[&#39;pcodecount&#39;]]&nbsp;=&nbsp;&quot;&lt;br&gt;&lt;div&nbsp;class=&quot;msgheader&quot;&gt;&lt;div&nbsp;class=&quot;right&quot;&gt;&lt;a&nbsp;href=&quot;###&quot;&nbsp;class=&quot;smalltxt&quot;&nbsp;onclick=&quot;copycode($(&#39;phpcode$discuzcodes[codecount]&#39;));&quot;&gt;[复制此代码]&lt;/a&gt;&lt;/div&gt;代码如下:&lt;/div&gt;&lt;div&nbsp;class=&quot;msgborder&quot;&nbsp;id=&quot;phpcode$discuzcodes[codecount]&quot;&gt;&quot;.fhtml2($code).&quot;&lt;/div&gt;&lt;br&gt;&quot;;&nbsp;\r\n$discuzcodes[&#39;codecount&#39;]++;&nbsp;\r\nreturn&nbsp;&quot;[	DISCUZ_CODE_$discuzcodes[pcodecount]	]&quot;;&nbsp;\r\n}&nbsp;\r\n$message&nbsp;=&nbsp;preg_replace(&quot;/s*[code](.+?)[/code]s*/ies&quot;,&nbsp;&quot;codedisp(&#39;\\1&#39;)&quot;,&nbsp;$message);&nbsp;\r\n$message&nbsp;=&nbsp;preg_replace(&quot;/s*[html](.+?)[/html]s*/ies&quot;,&nbsp;&quot;htmldisp(&#39;\\1&#39;)&quot;,&nbsp;$message);</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配中文字符的正则表达式： [u4e00-u9fa5]<br/>评注：匹配中文还真是个头疼的事，有了这个表达式就好办了</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配双字节字符(包括汉字在内)：[^x00-xff]<br/>评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1）</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配空白行的正则表达式：\ns*\r<br/>评注：可以用来删除空白行</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配HTML标记的正则表达式：&lt;(S*?)[^&gt;]*&gt;.*?&lt;/1&gt;|&lt;.*? /&gt;<br/>评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配首尾空白字符的正则表达式：^s*|s*$<br/>评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配Email地址的正则表达式：w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*<br/>评注：表单验证时很实用</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配网址URL的正则表达式：[a-zA-z]+://[^s]*<br/>评注：网上流传的版本功能很有限，上面这个基本可以满足需求</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$<br/>评注：表单验证时很实用</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配国内电话号码：d{3}-d{8}|d{4}-d{7}<br/>评注：匹配形式如 0511-4405222 或 021-87888822</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配腾讯QQ号：[1-9][0-9]{4,}<br/>评注：腾讯QQ号从10000开始</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配中国邮政编码：[1-9]d{5}(?!d)<br/>评注：中国邮政编码为6位数字</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配身份证：d{15}|d{18}<br/>评注：中国的身份证为15位或18位</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配ip地址：d+.d+.d+.d+<br/>评注：提取ip地址时有用</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配特定数字：</p><pre class="brush: bash; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">^[1-9]d*$　&nbsp;　&nbsp;//匹配正整数\r\n&nbsp;^-[1-9]d*$&nbsp;　&nbsp;//匹配负整数\r\n&nbsp;^-?[1-9]d*$　　&nbsp;//匹配整数\r\n&nbsp;^[1-9]d*|0$　&nbsp;//匹配非负整数（正整数&nbsp;+&nbsp;0）\r\n&nbsp;^-[1-9]d*|0$　　&nbsp;//匹配非正整数（负整数&nbsp;+&nbsp;0）\r\n&nbsp;^[1-9]d*.d*|0.d*[1-9]d*$　　&nbsp;//匹配正浮点数\r\n&nbsp;^-([1-9]d*.d*|0.d*[1-9]d*)$　&nbsp;//匹配负浮点数\r\n&nbsp;^-?([1-9]d*.d*|0.d*[1-9]d*|0?.0+|0)$　&nbsp;//匹配浮点数\r\n&nbsp;^[1-9]d*.d*|0.d*[1-9]d*|0?.0+|0$　　&nbsp;//匹配非负浮点数（正浮点数&nbsp;+&nbsp;0）\r\n&nbsp;^(-([1-9]d*.d*|0.d*[1-9]d*))|0?.0+|0$　　//匹配非正浮点数（负浮点数&nbsp;+&nbsp;0）</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">评注：处理大量数据时有用，具体应用时注意修正</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">匹配特定字符串：</p><pre class="brush: bash; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">^[A-Za-z]+$　　//匹配由26个英文字母组成的字符串\r\n&nbsp;^[A-Z]+$　　//匹配由26个英文字母的大写组成的字符串\r\n&nbsp;^[a-z]+$　　//匹配由26个英文字母的小写组成的字符串\r\n&nbsp;^[A-Za-z0-9]+$　　//匹配由数字和26个英文字母组成的字符串\r\n&nbsp;^w+$　　//匹配由数字、26个英文字母或者下划线组成的字符串</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">下面是一些特殊字符：</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">正则表达式中的特殊字符： （学习参考书－＜＜精通正则表达式＞＞）</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符<br/>意义：对于字符，通常表示按字面意义，指出接着的字符为特殊字符，不作解释。<br/>例如：/b/匹配字符&#39;b&#39;,通过在b 前面加一个反斜杠，也就是/b/，则该字符变成特殊字符，表示<br/>匹配一个单词的分界线。<br/>或者：<br/>对于几个字符，通常说明是特殊的，指出紧接着的字符不是特殊的，而应该按字面解释。<br/>例如：*是一个特殊字符，匹配任意个字符(包括0个字符)；例如：/a*/意味匹配0个或多个a。<br/>为了匹配字面上的*，在a前面加一个反斜杠；例如：/a*/匹配&#39;a*&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符^<br/>意义：表示匹配的字符必须在最前边。<br/>例如：/^A/不匹配&quot;an A,&quot;中的&#39;A&#39;，但匹配&quot;An A.&quot;中最前面的&#39;A&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符$<br/>意义：与^类似，匹配最末的字符。<br/>例如：/t$/不匹配&quot;eater&quot;中的&#39;t&#39;，但匹配&quot;eat&quot;中的&#39;t&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符*<br/>意义：匹配*前面的字符0次或n次。<br/>例如:/bo*/匹配&quot;A ghost booooed&quot;中的&#39;boooo&#39;或&quot;A bird warbled&quot;中的&#39;b&#39;，但不匹配&quot;A goat g<br/>runted&quot;中的任何字符。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符+<br/>意义：匹配+号前面的字符1次或n次。等价于{1,}。<br/>例如：/a+/匹配&quot;candy&quot;中的&#39;a&#39;和&quot;caaaaaaandy.&quot;中的所有&#39;a&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符?<br/>意义：匹配?前面的字符0次或1次。<br/>例如：/e?le?/匹配&quot;angel&quot;中的&#39;el&#39;和&quot;angle.&quot;中的&#39;le&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符.<br/>意义：(小数点)匹配除换行符外的所有单个的字符。<br/>例如：/.n/匹配&quot;nay, an apple is on the tree&quot;中的&#39;an&#39;和&#39;on&#39;，但不匹配&#39;nay&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符(x)<br/>意义：匹配&#39;x&#39;并记录匹配的值。<br/>例如：/(foo)/匹配和记录&quot;foo bar.&quot;中的&#39;foo&#39;。匹配子串能被结果数组中的素[1], ..., [n] 返<br/>回，或被RegExp对象的属性$1, ..., $9返回。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符x|y<br/>意义：匹配&#39;x&#39;或者&#39;y&#39;。<br/>例如：/green|red/匹配&quot;green apple&quot;中的&#39;green&#39;和&quot;red apple.&quot;中的&#39;red&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符{n}<br/>意义：这里的n是一个正整数。匹配前面的n个字符。<br/>例如：/a{2}/不匹配&quot;candy,&quot;中的&#39;a&#39;，但匹配&quot;caandy,&quot; 中的所有&#39;a&#39;和&quot;caaandy.&quot;中前面的两个<br/>&#39;a&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符{n,}<br/>意义：这里的n是一个正整数。匹配至少n个前面的字符。<br/>例如：/a{2,}不匹配&quot;candy&quot;中的&#39;a&#39;，但匹配&quot;caandy&quot;中的所有&#39;a&#39;和&quot;caaaaaaandy.&quot;中的所有&#39;a&#39;</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符{n,m}<br/>意义：这里的n和m都是正整数。匹配至少n个最多m个前面的字符。<br/>例如：/a{1,3}/不匹配&quot;cndy&quot;中的任何字符，但匹配 &quot;candy,&quot;中的&#39;a&#39;，&quot;caandy,&quot; 中的前面两个<br/>&#39;a&#39;和&quot;caaaaaaandy&quot;中前面的三个&#39;a&#39;，注意：即使&quot;caaaaaaandy&quot; 中有很多个&#39;a&#39;，但只匹配前面的三<br/>个&#39;a&#39;即&quot;aaa&quot;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符[xyz]<br/>意义：一字符列表，匹配列出中的任一字符。你可以通过连字符-指出一个字符范围。<br/>例如：[abcd]跟[a-c]一样。它们匹配&quot;brisket&quot;中的&#39;b&#39;和&quot;ache&quot;中的&#39;c&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符[^xyz]<br/>意义：一字符补集，也就是说，它匹配除了列出的字符外的所有东西。 你可以使用连字符-指出一<br/>字符范围。<br/>例如：[^abc]和[^a-c]等价，它们最早匹配&quot;brisket&quot;中的&#39;r&#39;和&quot;chop.&quot;中的&#39;h&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符<br/>意义：匹配一个空格(不要与b混淆)</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符b<br/>意义：匹配一个单词的分界线，比如一个空格(不要与混淆)<br/>例如：/bnw/匹配&quot;noonday&quot;中的&#39;no&#39;，/wyb/匹配&quot;possibly yesterday.&quot;中的&#39;ly&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符B<br/>意义：匹配一个单词的非分界线<br/>例如：/wBn/匹配&quot;noonday&quot;中的&#39;on&#39;，/yBw/匹配&quot;possibly yesterday.&quot;中的&#39;ye&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符cX<br/>意义：这里的X是一个控制字符。匹配一个字符串的控制字符。<br/>例如：/cM/匹配一个字符串中的control-M。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符d<br/>意义：匹配一个数字，等价于[0-9]。<br/>例如：/d/或/[0-9]/匹配&quot;B2 is the suite number.&quot;中的&#39;2&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符D<br/>意义：匹配任何的非数字，等价于[^0-9]。<br/>例如：/D/或/[^0-9]/匹配&quot;B2 is the suite number.&quot;中的&#39;B&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符f<br/>意义：匹配一个表单符</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符n<br/>意义：匹配一个换行符</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符r<br/>意义：匹配一个回车符</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符s<br/>意义：匹配一个单个white空格符，包括空格，tab，form feed，换行符，等价于[ fnrtv]。<br/>例如：/sw*/匹配&quot;foo bar.&quot;中的&#39; bar&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符S<br/>意义：匹配除white空格符以外的一个单个的字符，等价于[^ fnrtv]。<br/>例如：/S/w*匹配&quot;foo bar.&quot;中的&#39;foo&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符t<br/>意义：匹配一个制表符</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符v<br/>意义：匹配一个顶头制表符</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符w<br/>意义：匹配所有的数字和字母以及下划线，等价于[A-Za-z0-9_]。<br/>例如：/w/匹配&quot;apple,&quot;中的&#39;a&#39;，&quot;$5.28,&quot;中的&#39;5&#39;和&quot;3D.&quot;中的&#39;3&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符W<br/>意义：匹配除数字、字母外及下划线外的其它字符，等价于[^A-Za-z0-9_]。<br/>例如：/W/或者/[^$A-Za-z0-9_]/匹配&quot;50%.&quot;中的&#39;%&#39;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符n<br/>意义：这里的n是一个正整数。匹配一个正则表达式的最后一个子串的n的值(计数左圆括号)。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">例如：/apple(,)sorange1/匹配&quot;apple, orange, cherry, peach.&quot;中的&#39;apple, orange&#39;，下面<br/>有一个更加完整的例子。<br/>注意：如果左圆括号中的数字比n指定的数字还小，则n取下一行的八进制escape作为描述。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符ooctal和xhex<br/>意义：这里的ooctal是一个八进制的escape值，而xhex是一个十六进制的escape值，允许在一个正则表达式中嵌入ASCII码。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;"><strong style="margin: 0px; padding: 0px;">通用模式</strong></p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">定界符，通常使用 &quot;/&quot;做为定界符开始和结束,也可以使用&quot;#&quot;。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">什么时候使用&quot;#&quot;呢?一般是在你的字符串中有很多&quot;/&quot;字符的时候，因为正则的时候这种字符需要转义，比如uri。<br/>使用&quot;/&quot;定界符的代码如下.</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">&lt;?php&nbsp;\r\n$regex&nbsp;=&nbsp;&#39;/^http://([w.]+)/([w]+)/([w]+).html$/i&#39;;&nbsp;\r\n$str&nbsp;=&nbsp;&#39;http://www.youku.com/show_page/id_ABCDEFG.html&#39;;&nbsp;\r\n$matches&nbsp;=&nbsp;array();&nbsp;\r\nif(preg_match($regex,&nbsp;$str,&nbsp;$matches)){&nbsp;\r\nvar_dump($matches);&nbsp;\r\n}&nbsp;\r\necho&nbsp;&quot;n&quot;;</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">preg_match中的$matches[0]将包含与整个模式匹配的字符串。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">使用&quot;#&quot;定界符的代码如下.这个时候对&quot;/&quot;就不转义!</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">$regex&nbsp;=&nbsp;&#39;#^http://([w.]+)/([w]+)/([w]+).html$#i&#39;;&nbsp;\r\n$str&nbsp;=&nbsp;&#39;http://www.youku.com/show_page/id_ABCDEFG.html&#39;;&nbsp;\r\n$matches&nbsp;=&nbsp;array();&nbsp;\r\nif(preg_match($regex,&nbsp;$str,&nbsp;$matches)){&nbsp;\r\nvar_dump($matches);&nbsp;\r\n}&nbsp;\r\necho&nbsp;&quot;n&quot;;</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">修饰符:用于改变正则表达式的行为。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">我们看到的(&#39;/^http://([w.]+)/([w]+)/([w]+).html/i&#39;)中的最后一个&quot;i&quot;就是修饰符,表示忽略大小写，还有一个我们经常用到的是&quot;x&quot;表示忽略空格。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">贡献代码:</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">$regex&nbsp;=&nbsp;&#39;/HELLO/&#39;;&nbsp;\r\n$str&nbsp;=&nbsp;&#39;hello&nbsp;word&#39;;&nbsp;\r\n$matches&nbsp;=&nbsp;array();&nbsp;\r\nif(preg_match($regex,&nbsp;$str,&nbsp;$matches)){&nbsp;\r\necho&nbsp;&#39;No&nbsp;i:Valid&nbsp;Successful!&#39;,&quot;n&quot;;&nbsp;\r\n}&nbsp;\r\nif(preg_match($regex.&#39;i&#39;,&nbsp;$str,&nbsp;$matches)){&nbsp;\r\necho&nbsp;&#39;YES&nbsp;i:Valid&nbsp;Successful!&#39;,&quot;n&quot;;&nbsp;\r\n}</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">字符域:[w]用方括号扩起来的部分就是字符域。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">限定符:如[w]{3,5}或者[w]*或者[w]+这些[w]后面的符号都表示限定符。现介绍具体意义。<br/>{3,5}表示3到5个字符。{3,}超过3个字符，{,5}最多5个，{3}三个字符。<br/>* 表示0到多个<br/>+ 表示1到多个。<br/>脱字符号<br/>^:<br/>&gt; 放在字符域(如:[^w])中表示否定(不包括的意思)——“反向选择”<br/>&gt; 放在表达式之前，表示以当前这个字符开始。(/^n/i,表示以n开头)。<br/>注意，我们经常管&quot;&quot;叫&quot;跳脱字符&quot;。用于转义一些特殊符号，如&quot;.&quot;,&quot;/&quot;<br/>界符：正则表达式的形式一般如下：<br/>/love/<br/>其中位于“/”定界符之间的部分就是将要在目标对象中进行匹配的模式。<br/>元字符：就是指那些在正则表达式中具有特殊意义的专用字符，可以用来规定其前导字符（即位于元字符前面的字符）在目标对象中的出现模式。<br/>较为常用的元字符包括： “+”， “*”，以及 “?”。<br/>“+”元字符规定其前导字符必须在目标对象中连续出现一次或多次<br/>“*”元字符规定其前导字符必须在目标对象中出现零次或连续多次，<br/>“?”元字符规定其前导字符必须在目标对象中连续出现零次或一次。<br/>下面，就让我们来看一下正则表达式元字符的具体应用。<br/>/fo+/<br/>因为上述正则表达式中包含“+”元字符（它前面的“o”是前导字符），表示可以与目标对象中的“fool”, “fo”等在字母f后面连续出现一个或多个字母o的字符串相匹配。<br/>除了元字符之外，用户还可以精确指定模式在匹配对象中出现的频率。例如，<br/>/jim{2,6}/<br/>上述正则表达式规定字符m可以在匹配对象中连续出现2-6次，因此，上述正则表达式可以同jimmy或jimmmmmy等字符串相匹配。<br/>其它几个重要的元字符的使用方式。<br/>s：用于匹配单个空格符，包括tab键和换行符；<br/>S：用于匹配除单个空格符之外的所有字符；<br/>d：用于匹配从0到9的数字；<br/>w：用于匹配字母，数字或下划线字符；<br/>W：用于匹配所有与w不匹配的字符；<br/>. ：用于匹配除换行符之外的所有字符。<br/>（说明：我们可以把s和S以及w和W看作互为逆运算）<br/>下面，我们就通过实例看一下如何在正则表达式中使用上述元字符。<br/>/s+/<br/>上述正则表达式可以用于匹配目标对象中的一个或多个空格字符。<br/>除了我们以上所介绍的元字符之外，正则表达式中还具有另外一种较为独特的专用字符，即定位符。<br/>定位符：用于规定匹配模式在目标对象中的出现位置。<br/>较为常用的定位符包括： “^”, “$”, “b” 以及 “B”。<br/>“^”定位符规定匹配模式必须出现在目标字符串的开头<br/>“$”定位符规定匹配模式必须出现在目标对象的结尾<br/>b定位符规定匹配模式必须出现在目标字符串的开头或结尾的两个边界之一<br/>“B”定位符则规定匹配对象必须位于目标字符串的开头和结尾两个边界之内，即匹配对象既不能作为目标字符串的开头，也不能作为目标字符串的结尾。同样，我们<br/>也可以把“^”和“$”以及“b”和“B”看作是互为逆运算的两组定位符。举例来说：<br/>/^hell/<br/>因为上述正则表达式中包含“^”定位符，所以可以与目标对象中以 “hell”, “hello”或 “hellhound”开头的字符串相匹配。<br/>/ar$/<br/>因为上述正则表达式中包含“$”定位符，所以可以与目标对象中以 “car”, “bar”或 “ar” 结尾的字符串相匹配。<br/>/bbom/<br/>因为上述正则表达式模式以“b”定位符开头，所以可以与目标对象中以 “bomb”, 或 “bom”开头的字符串相匹配。<br/>/manb/<br/>因为上述正则表达式模式以“b”定位符结尾，所以可以与目标对象中以 “human”, “woman”或 “man”结尾的字符串相匹配。<br/>为了能够方便用户更加灵活的设定匹配模式，正则表达式允许使用者在匹配模式中指定某一个范围而不局限于具体的字符。例如：<br/>/[A-Z]/<br/>上述正则表达式将会与从A到Z范围内任何一个大写字母相匹配。<br/>/[a-z]/<br/>上述正则表达式将会与从a到z范围内任何一个小写字母相匹配。<br/>/[0-9]/<br/>上述正则表达式将会与从0到9范围内任何一个数字相匹配。<br/>/([a-z][A-Z][0-9])+/<br/>上述正则表达式将会与任何由字母和数字组成的字符串，如 “aB0” 等相匹配。这里需要提醒用户注意的一点就是可以在正则表达式中使用 “()” 把字符串组合在一起。<br/>“()”符号：包含的内容必须同时出现在目标对象中。因此，上述正则表达式将无法与诸如 “abc”等的字符串匹配，因为“abc”中的最后一个字符为字母而非数字。<br/>如果我们希望在正则表达式中实现类似编程逻辑中的“或”运算，在多个不同的模式中任选一个进行匹配的话，可以使用管道符： “|”。例如：<br/>/to|too|2/<br/>上述正则表达式将会与目标对象中的 “to”, “too”, 或 “2” 相匹配。<br/>否定符：“[^]”。与我们前文所介绍的定位符 “^” 不同，否定符 “[^]”规定目标对象中不能存在模式中所规定的字符串。例如：<br/>/[^A-C]/<br/>上述字符串将会与目标对象中除A，B，和C之外的任何字符相匹配。一般来说，当“^”出现在 “[]”内时就被视做否定运算符；而当“^”位于“[]”之外，或没有“[]”时，则应当被视做定位符。<br/>最后，当用户需要在正则表达式的模式中加入元字符，并查找其匹配对象时，可以使用<br/>转义符：“”。例如：<br/>/Th*/<br/>上述正则表达式将会与目标对象中的“Th*”而非“The”等相匹配。<br/>实际经验介绍<br/>还是得说说 ^ 和 $ 他们是分别用来匹配字符串的开始和结束，以下分别举例说明：<br/>“^The”：开头一定要有”The”字符串；<br/>“of despair$”：结尾一定要有”of despair” 的字符串；<br/>那么，<br/>“^abc$”：就是要求以abc开头和以abc结尾的字符串，实际上是只有abc匹配；<br/>“notice”：匹配包含notice的字符串；<br/>你可以看见如果你没有用我们提到的两个字符（最后一个例子），就是说模式（正则表达式）可以出现在被检验字符串的任何地方，你没有把他锁定到两边。<br/>接着，说说 ‘*&#39; ‘+&#39; 和 ‘?&#39;<br/>他们用来表示一个字符可以出现的次数或者顺序，他们分别表示：<br/>“zero or more”相当于{0,}<br/>“one or more”相当于{1,}<br/>“zero or one.”相当于{0,1}<br/>这里是一些例子：<br/>“ab*”：和ab{0,}同义，匹配以a开头，后面可以接0个或者N个b组成的字符串(”a”, “ab”, “abbb”, 等)；<br/>“ab+”：和ab{1,}同义，同上条一样，但最少要有一个b存在 (”ab” “abbb”等)；<br/>“ab?”：和ab{0,1}同义，可以没有或者只有一个b；<br/>“a?b+$”：匹配以一个或者0个a再加上一个以上的b结尾的字符串。<br/>要点：&#39;*&#39; ‘+&#39; 和 ‘?&#39; 只管它前面那个字符。<br/>你也可以在大括号里面限制字符出现的个数，比如：<br/>“ab{2}”: 要求a后面一定要跟两个b（一个也不能少）(”abb”)；<br/>“ab{2,}”: 要求a后面一定要有两个或者两个以上b(如”abb” “abbbb” 等)；<br/>“ab{3,5}”: 要求a后面可以有2－5个b(”abbb”, “abbbb”, or “abbbbb”)。<br/>现在我们把一定几个字符放到小括号里，比如：<br/>“a(bc)*”: 匹配 a 后面跟0个或者一个”bc”；<br/>“a(bc){1,5}”: 一个到5个 “bc”；<br/>还有一个字符 ‘|&#39;，相当于OR操作：<br/>“hi|hello”: 匹配含有”hi” 或者 “hello” 的 字符串；<br/>“(b|cd)ef”: 匹配含有 “bef” 或者 “cdef”的字符串；<br/>“(a|b)*c”: 匹配含有这样多个（包括0个）a或b，后面跟一个c的字符串；<br/>一个点(&#39;.&#39;)可以代表所有的单一字符，不包括” ”<br/>如果，要匹配包括” ”在内的所有单个字符，怎么办？<br/>用&#39;[ .]&#39;这种模式。<br/>“a.[0-9]”: 一个a加一个字符再加一个0到9的数字；<br/>“^.{3}$”: 三个任意字符结尾。<br/>中括号括住的内容只匹配一个单一的字符<br/>“[ab]”: 匹配单个的 a 或者 b ( 和 “a│b” 一样)；<br/>“[a-d]”: 匹配&#39;a&#39; 到&#39;d&#39;的单个字符 (和”a│b│c│d” 还有 “[abcd]”效果一样)；<br/>一般我们都用[a-zA-Z]来指定字符为一个大小写英文：<br/>“^[a-zA-Z]”: 匹配以大小写字母开头的字符串；<br/>“[0-9]%”: 匹配含有 形如 x％ 的字符串；<br/>“,[a-zA-Z0-9]$”: 匹配以逗号再加一个数字或字母结尾的字符串；<br/>你也可以把你不想要得字符列在中括号里，你只需要在总括号里面使用&#39;^&#39; 作为开头 “%[^a-zA-Z]%” 匹配含有两个百分号里面有一个非字母的字符串。<br/>要点：^用在中括号开头的时候，就表示排除括号里的字符。<br/>为了PHP能够解释，你必须在这些字符面前后加”，并且将一些字符转义。<br/>不要忘记在中括号里面的字符是这条规路的例外—在中括号里面，所有的特殊字符，包括(”)，都将失去他们的特殊性质 “[*+?{}.]”匹配含有这些字符的字符串：<br/>还有，正如regx的手册告诉我们：”如果列表里含有&#39;]&#39;，最好把它作为列表里的第一个字符(可能跟在&#39;^&#39;后面)。如果含有&#39;-&#39;，最好把它放在最前面或者最后面<br/>， or 或者一个范围的第二个结束点[a-d-0-9]中间的‘-&#39;将有效。<br/>看了上面的例子，你对{n,m}应该理解了吧。要注意的是，n和m都不能为负整数，而且n总是小于m。这样，才能 最少匹配n次且最多匹配m次。如”p{1,5}”将匹配<br/>“pvpppppp”中的前五个p<br/>下面说说以开头的<br/>b 书上说他是用来匹配一个单词边界，就是…比如&#39;veb&#39;，可以匹配love里的ve而不匹配very里有ve<br/>B 正好和上面的b相反。<br/>正则表达式的其他用法<br/>提取字符串<br/>ereg() and eregi() 有一个特性是允许用户通过正则表达式去提取字符串的一部分(具体用法你可以阅读手册)。比如说，我们想从 path/URL 提取文件名，下面的代<br/>码就是你需要：<br/>ereg(”([^/]*)$”, $pathOrUrl, $regs);<br/>echo $regs[1];<br/>高级的代换<br/>ereg_replace() 和 eregi_replace()也是非常有用的，假如我们想把所有的间隔负号都替换成逗号：<br/>ereg_replace(”[ t]+”, “,”, trim($str));<br/>以下为引用的内容：</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">preg_match()和preg_match_all()&nbsp;\r\npreg_quote()&nbsp;\r\npreg_split()&nbsp;\r\npreg_grep()&nbsp;\r\npreg_replace()</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">函数的具体使用，我们可以通过PHP手册来找到，下面分享一些平时积累的正则表达式：<br/>匹配action属性</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">以下为引用的内容：</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">$str&nbsp;=&nbsp;&#39;&#39;;&nbsp;\r\n$match&nbsp;=&nbsp;&#39;&#39;;&nbsp;\r\npreg_match_all(&#39;/s+action=&quot;(?!http:)(.*?)&quot;s/&#39;,&nbsp;$str,&nbsp;$match);&nbsp;\r\nprint_r($match);</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">在正则中使用回调函数</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">以下为引用的内容：</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">/**&nbsp;\r\n*&nbsp;replace&nbsp;some&nbsp;string&nbsp;by&nbsp;callback&nbsp;function&nbsp;\r\n*&nbsp;\r\n*/&nbsp;\r\nfunction&nbsp;callback_replace()&nbsp;{&nbsp;\r\n$url&nbsp;=&nbsp;&#39;http://esfang.house.sina.com.cn&#39;;&nbsp;\r\n$str&nbsp;=&nbsp;&#39;&#39;;&nbsp;\r\n$str&nbsp;=&nbsp;preg_replace&nbsp;(&nbsp;&#39;/(?&lt;=saction=&quot;)(?!http:)(.*?)(?=&quot;s)/e&#39;,&nbsp;&#39;search($url,&nbsp;1)&#39;,&nbsp;$str&nbsp;);&nbsp;\r\necho&nbsp;$str;&nbsp;\r\n}&nbsp;\r\nfunction&nbsp;search($url,&nbsp;$match){&nbsp;\r\nreturn&nbsp;$url&nbsp;.&nbsp;&#39;/&#39;&nbsp;.&nbsp;$match;&nbsp;\r\n}</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">带断言的正则匹配</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">$match&nbsp;=&nbsp;&#39;&#39;;&nbsp;\r\n$str&nbsp;=&nbsp;&#39;xxxxxx.com.cn&nbsp;bold&nbsp;font&nbsp;\r\nparagraph&nbsp;text&nbsp;\r\n&#39;;&nbsp;\r\npreg_match_all&nbsp;(&nbsp;&#39;/(?&lt;=&lt;(w{1})&gt;).*(?=&lt;/1&gt;)/&#39;,&nbsp;$str,&nbsp;$match&nbsp;);&nbsp;\r\necho&nbsp;&quot;匹配没有属性的HTML标签中的内容：&quot;;&nbsp;\r\nprint_r&nbsp;(&nbsp;$match&nbsp;);</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">替换HTML源码中的地址</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">以下为引用的内容：</p><pre class="brush: php; gutter: false; first-line: 1" style="margin: 15px auto; padding: 10px 15px; word-break: break-all; word-wrap: break-word; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &#39;courier new&#39;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(68, 68, 68); background-color: rgb(251, 251, 251);">$form_html&nbsp;=&nbsp;preg_replace&nbsp;(&nbsp;&#39;/(?&lt;=saction=&quot;|ssrc=&quot;|shref=&quot;)(?!http:|javascript)(.*?)(?=&quot;s)/e&#39;,&nbsp;&#39;add_url($url,&nbsp;&#39;1&#39;)&#39;,&nbsp;$form_html&nbsp;);</pre><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">元字符</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &#39;microsoft yahei&#39;; font-size: 14px; line-height: 25px; white-space: normal;">在上面的例子中，^ 、d 及 $ 等这些符号，代表了特定的匹配意义，我们称之为元字符，常用的元字符如下：<br/>元字符 说明<br/>. 匹配除换行符意外的任意字符<br/>w 匹配字母或数字或下划线<br/>s 匹配任意的空白符<br/>d 匹配数字<br/>b 匹配单词的开始或结束<br/>^ 匹配字符串的开始<br/>$ 匹配字符串的结束<br/>[x] 匹配x字符，如匹配字符串中的 a、b 和 c 字符<br/>W w的反义，即匹配任意非字母，数字，下划线和汉字的字符<br/>S s的反义，即匹配任意非空白符的字符<br/>D d的反义，即匹配任意非数字的字符<br/>B b的反义，即不是单词开头或结束的位置<br/>[^x] 匹配除了 x 意外的任意字符，如 [^abc] 匹配除了 abc 这几个字母之外的任意字符</p><p><br/></p>', 45, 0, '2016-03-13 11:02:00', '0000-00-00 00:00:00');
INSERT INTO `pppf_article` (`article_id`, `article_reid`, `article_username`, `article_type`, `article_title`, `article_cid`, `article_content`, `article_readcount`, `article_commendcount`, `article_date`, `article_last_modify_date`) VALUES
(83, 0, '9262981', 1, '一元运算符 i++ ++i ', 'javascript', '<p style="text-indent: 28px"><span style="color:maroon">var box = 100;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p style="text-indent: 28px"><span style="color:maroon">var age = ++box;&nbsp;&nbsp;&nbsp; </span><span style="color:#333333">&nbsp; &nbsp;//age</span><span style="font-family:宋体;color:#333333">值为</span><span style="color:#333333">101</span></p><p style="text-indent: 28px"><span style="color:maroon">var height = box++; &nbsp;&nbsp; &nbsp;&nbsp;/</span><span style="color:#333333">/height</span><span style="font-family:宋体;color:#333333">值为</span><span style="color:#333333">100</span></p><p style="text-indent: 28px"><span style="color:#333333">box+=100 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //box=box+100</span></p><p>&nbsp; box-=100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//box=box-100<br/></p>', 91, 0, '2016-03-13 21:24:07', '0000-00-00 00:00:00'),
(84, 0, '9262981', 1, 'javascript 三元运算符', 'javascript', '<pre class="brush:js;toolbar:false">if(10&gt;2){\r\n	alert(&#39;对&#39;);\r\n}else{\r\n	alert(&#39;错&#39;);\r\n}\r\n\r\n\r\n\r\nvar&nbsp;box=10&gt;2?&#39;对&#39;:&#39;错&#39;;\r\nalert(box);</pre><p><br/></p><pre class="brush:js;toolbar:false">这两个相等效果；</pre><p><br/></p>', 106, 0, '2016-03-13 21:33:35', '0000-00-00 00:00:00'),
(86, 0, '9262981', 1, 'html5表格colspan rowspan的使用示例', 'html', '<pre class="brush:as3;toolbar:false">&lt;!DOCTYPE&nbsp;html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;\r\n&lt;title&gt;表格元素&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n\r\n&lt;table&nbsp;border=&quot;1&quot;&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;张三&lt;/td&gt;\r\n&lt;td&gt;男&lt;/td&gt;\r\n&lt;td&gt;未婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;李四&lt;/td&gt;\r\n&lt;td&gt;女&lt;/td&gt;\r\n&lt;td&gt;已婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/table&gt;\r\n\r\n&lt;br&gt;\r\n\r\n&lt;table&nbsp;border=&quot;1&quot;&nbsp;style=&quot;width:300px;&quot;&gt;\r\n&lt;tr&gt;\r\n&lt;th&gt;姓名&lt;/th&gt;\r\n&lt;th&gt;性别&lt;/th&gt;\r\n&lt;th&gt;婚否&lt;/th&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;张三&lt;/td&gt;\r\n&lt;td&gt;男&lt;/td&gt;\r\n&lt;td&gt;未婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;李四&lt;/td&gt;\r\n&lt;td&gt;女&lt;/td&gt;\r\n&lt;td&gt;已婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/table&gt;\r\n\r\n&lt;br&gt;\r\n\r\n&lt;table&nbsp;border=&quot;1&quot;&nbsp;style=&quot;width:300px;&quot;&gt;\r\n&lt;tr&gt;\r\n&lt;th&nbsp;rowspan=&quot;4&quot;&gt;基本情况&lt;/th&gt;\r\n&lt;th&gt;姓名&lt;/th&gt;\r\n&lt;th&gt;性别&lt;/th&gt;\r\n&lt;th&gt;婚否&lt;/th&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;张三&lt;/td&gt;\r\n&lt;td&gt;男&lt;/td&gt;\r\n&lt;td&gt;未婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;李四&lt;/td&gt;\r\n&lt;td&gt;女&lt;/td&gt;\r\n&lt;td&gt;已婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&nbsp;colspan=&quot;3&quot;&gt;统计：共两人&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/table&gt;\r\n\r\n&lt;br&gt;\r\n\r\n&lt;table&nbsp;border=&quot;1&quot;&nbsp;style=&quot;width:300px;&quot;&gt;\r\n&lt;caption&gt;这是一个表格&lt;/caption&gt;\r\n\r\n&lt;tfoot&gt;\r\n&lt;tr&gt;\r\n&lt;td&nbsp;colspan=&quot;3&quot;&gt;统计：共两人&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/tfoot&gt;\r\n\r\n&lt;tbody&gt;\r\n&lt;tr&nbsp;style=&quot;background:red;&quot;&gt;\r\n&lt;td&gt;张三&lt;/td&gt;\r\n&lt;td&gt;男&lt;/td&gt;\r\n&lt;td&gt;未婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;李四&lt;/td&gt;\r\n&lt;td&gt;女&lt;/td&gt;\r\n&lt;td&gt;已婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/tbody&gt;\r\n\r\n&lt;thead&gt;\r\n&lt;tr&gt;\r\n&lt;th&gt;姓名&lt;/th&gt;\r\n&lt;th&gt;性别&lt;/th&gt;\r\n&lt;th&gt;婚否&lt;/th&gt;\r\n&lt;/tr&gt;\r\n&lt;/thead&gt;\r\n\r\n&lt;/table&gt;\r\n\r\n\r\n&lt;br&gt;\r\n\r\n&lt;table&nbsp;border=&quot;1&quot;&nbsp;style=&quot;width:300px;&quot;&gt;\r\n\r\n&lt;colgroup&nbsp;style=&quot;background:white;&quot;&nbsp;span=&quot;1&quot;&gt;&lt;/colgroup&gt;\r\n&lt;colgroup&nbsp;style=&quot;background:red;&quot;&nbsp;span=&quot;1&quot;&gt;&lt;/colgroup&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;th&gt;姓名&lt;/th&gt;\r\n&lt;th&gt;性别&lt;/th&gt;\r\n&lt;th&gt;婚否&lt;/th&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;张三&lt;/td&gt;\r\n&lt;td&gt;男&lt;/td&gt;\r\n&lt;td&gt;未婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;李四&lt;/td&gt;\r\n&lt;td&gt;女&lt;/td&gt;\r\n&lt;td&gt;已婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/table&gt;\r\n\r\n&lt;br&gt;\r\n\r\n&lt;table&nbsp;border=&quot;1&quot;&nbsp;style=&quot;width:300px;&quot;&gt;\r\n\r\n&lt;colgroup&gt;\r\n&lt;col&gt;\r\n&lt;col&nbsp;style=&quot;background:red;&quot;&gt;\r\n&lt;/colgroup&gt;\r\n\r\n&lt;tr&gt;\r\n&lt;th&gt;姓名&lt;/th&gt;\r\n&lt;th&gt;性别&lt;/th&gt;\r\n&lt;th&gt;婚否&lt;/th&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;张三&lt;/td&gt;\r\n&lt;td&gt;男&lt;/td&gt;\r\n&lt;td&gt;未婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td&gt;李四&lt;/td&gt;\r\n&lt;td&gt;女&lt;/td&gt;\r\n&lt;td&gt;已婚&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/table&gt;\r\n\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><p><br/></p><meta charset="utf-8"/><title>表格元素</title><table border="1"><tbody><tr class="firstRow"><td>张三</td><td>男</td><td>未婚</td></tr><tr><td>李四</td><td>女</td><td>已婚</td></tr></tbody></table><p><br/></p><table border="1" style="width:300px;"><tbody><tr class="firstRow"><th>姓名</th><th>性别</th><th>婚否</th></tr><tr><td>张三</td><td>男</td><td>未婚</td></tr><tr><td>李四</td><td>女</td><td>已婚</td></tr></tbody></table><p><br/></p><table border="1" style="width:300px;"><tbody><tr class="firstRow"><th rowspan="4">基本情况</th><th>姓名</th><th>性别</th><th>婚否</th></tr><tr><td>张三</td><td>男</td><td>未婚</td></tr><tr><td>李四</td><td>女</td><td>已婚</td></tr><tr><td colspan="3">统计：共两人</td></tr></tbody></table><p><br/></p><table border="1" style="width:300px;"><caption>这是一个表格</caption><tfoot><tr><td colspan="3">统计：共两人</td></tr></tfoot><tbody><tr style="background:red;"><td>张三</td><td>男</td><td>未婚</td></tr><tr><td>李四</td><td>女</td><td>已婚</td></tr></tbody><thead><tr class="firstRow"><th>姓名</th><th>性别</th><th>婚否</th></tr></thead></table><p><br/></p><table border="1" style="width:300px;"><colgroup style="background:white;" span="1"></colgroup><colgroup style="background:red;" span="1"></colgroup><tbody><tr class="firstRow"><th>姓名</th><th>性别</th><th>婚否</th></tr><tr><td>张三</td><td>男</td><td>未婚</td></tr><tr><td>李四</td><td>女</td><td>已婚</td></tr></tbody></table><p><br/></p><table border="1" style="width: 300px;"><colgroup><col/><col style="background:red;"/></colgroup><tbody><tr class="firstRow"><th>姓名</th><th>性别</th><th>婚否</th></tr><tr><td>张三</td><td>男</td><td>未婚</td></tr><tr><td>李四</td><td>女</td><td>已婚</td></tr></tbody></table><!--!doctype-->', 143, 0, '2016-03-15 12:58:04', '2016-03-15 21:16:25'),
(87, 0, '9262981', 1, 'html5 文档元素一些新标签', 'html', '<pre class="brush:bash;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; width: 847.5px; background-color: rgb(245, 245, 245);">&lt;!DOCTYPE&nbsp;html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;\r\n&lt;title&gt;文档元素&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;header&gt;\r\n&lt;hgroup&gt;\r\n&lt;h1&gt;这里是一个大标题&lt;/h1&gt;\r\n&lt;h4&gt;这里是一个副标题&lt;/h4&gt;\r\n&lt;/hgroup&gt;\r\n&lt;nav&gt;这里是一个导航&lt;/nav&gt;\r\n这里存放网页的标头部分：LOGO，标题，导航等。\r\n&lt;/header&gt;\r\n\r\n&lt;section&gt;\r\n这里是文档的主题部分。\r\n&lt;/section&gt;\r\n\r\n&lt;article&gt;\r\n&lt;header&gt;...&lt;/header&gt;\r\n&lt;section&gt;...&lt;/section&gt;\r\n&lt;address&gt;...&lt;/address&gt;\r\n&lt;footer&gt;....&lt;/footer&gt;\r\n&lt;/article&gt;\r\n\r\n&lt;aside&gt;...&lt;/aside&gt;\r\n\r\n&lt;footer&gt;\r\n&lt;h4&gt;这里是尾部的副标题&lt;/h4&gt;\r\n这里存放页面的尾部：版权声明，友情链接\r\n&lt;address&gt;这里是联系信息&lt;/address&gt;\r\n&lt;/footer&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="http://www.9262981.com/upload/image/20160315/1458020398123974.png" title="1458020398123974.png" alt="blob.png" style="box-sizing: border-box; border: 0px; vertical-align: middle; width: 847.5px;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">二．文档元素解析&nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;文档元素的大部分标签，是没有任何效果的，完全是为了配合语义使用，以强调它的结 构性。只有在后面的章节学习 CSS，配合使用才能起到布局和样式的效果。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">1.&lt;header&gt;表示首部 &lt;header&gt; 这里部分一般是页面头部，包括：LOGO、标题、导航等内容 &lt;/header&gt; 解释：&lt;header&gt;元素主要设置页面的标头部分。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">2.&lt;footer&gt;表示尾部</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">&lt;footer&gt; 这里是页面的尾部，一般包括：版权声明、友情链接等内容 &lt;/footer&gt; 解释：&lt;footer&gt;元素主要设置页面的尾部。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">3.&lt;h1&gt;~&lt;h6&gt;添加标题 &lt;h1&gt;标题部分&lt;/h1&gt; &lt;h4&gt;小标题部分&lt;/h4&gt; 解释：&lt;h1&gt;~&lt;h6&gt;实际作用就是加粗并改变字体大小。用于各种标题文档。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">4.&lt;hgroup&gt;组合标题 &lt;hgroup&gt; &lt;h1&gt;标题部分&lt;/h1&gt; &lt;h4&gt;小标题部分&lt;/h4&gt; &lt;/hgroup&gt; 解释：&lt;hgroup&gt;元素的作用就是当多个标题出现，干扰到一对或多个本身需要整合的 标题，这是使用此元素包含群组。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">5.&lt;section&gt;文档主题 &lt;section&gt; 这里一般是存放文档主题内容。 &lt;/section&gt; 解释：&lt;section&gt;元素的作用是定义一个文档的主题内容。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">6.&lt;nav&gt;添加导航 &lt;nav&gt;这里存放文档的导航&lt;/nav&gt; 解释：&lt;nav&gt;元素给文档页面添加一个导航。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">7.&lt;article&gt;添加一个独立成篇的文档 &lt;article&gt; &lt;header&gt; &lt;nav&gt;&lt;/nav&gt; &lt;/header&gt;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">&lt;section&gt;&lt;/section&gt;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">&lt;footer&gt;&lt;/footer&gt; &lt;/article&gt; 解释：&lt;article&gt;元素表示独立成篇的文档，里面可以包含头、尾、主题等一系列内容。 在比较大的页面中会使用到，比如一片博文的列表，每篇博文，都有自己的头、尾、主题等 内容。和此相似的还有论坛的帖子、用户的评论、新闻等。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">8.&lt;aside&gt;生成注释栏 &lt;aside&gt;这是是一个注释&lt;/aside&gt;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">解释：&lt;aside&gt;元素专门为某一段内容进行注释使用。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">9.&lt;address&gt;表示文档或 article 元素的联系信息。 &lt;address&gt;联系信息&lt;/address&gt; 解释：如果是在&lt;body&gt;元素下时，表示整个文档的联系信息。如果是在&lt;article&gt;元 素下时，表示其下的联系信息。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">10.&lt;details&gt;元素生成详情区域、&lt;summary&gt;元素在其内部生成说明标签 解释：由于大多数主流浏览器尚未支持，暂略</p><p><br/></p>', 117, 0, '2016-03-15 13:37:32', '2016-03-15 20:24:22'),
(88, 0, '9262981', 1, 'html5嵌入元素', 'html', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">本章主要探讨 HTML5 中嵌入元素，嵌入元素主要功能是把外部的一些资源插入到 HTML 中。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">一．嵌入元素总汇 这里所列出的元素，并非本节课全部涉及到，比如音频 audio、视频 video、以及动态 图像 canvas 和媒体资源 source、track 等会在后面章节或季度讲解。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="http://www.9262981.com/upload/image/20160315/1458042517114718.png" title="1458042517114718.png" alt="blob.png" style="box-sizing: border-box; border: 0px; vertical-align: middle; width: 847.5px;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">二．嵌入元素解析 1.&lt;img&gt;嵌入图像 &lt;img src=&quot;img.png&quot;&gt; 解释：&lt;img&gt;元素主要是插入一张外部的图片，那么图片的路径问题和超链接一致。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="http://www.9262981.com/upload/image/20160315/1458042531106137.png" title="1458042531106137.png" alt="blob.png" style="box-sizing: border-box; border: 0px; vertical-align: middle; width: 847.5px;"/></p><pre class="brush:cpp;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; width: 847.5px; background-color: rgb(245, 245, 245);">&lt;a&nbsp;href=&quot;index.html&quot;&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;img&nbsp;src=&quot;img.png&quot;&nbsp;width=&quot;339&quot;&nbsp;height=&quot;229&quot;&nbsp;alt=&quot;风景图&quot;&nbsp;ismap&gt;&nbsp;\r\n&lt;/a&gt;\r\n点击以后地址栏会显示：\r\nindex.html?248,110&nbsp;图片的坐标</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">2.&lt;map&gt;创建分区响应图</p><pre class="brush:bash;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; width: 847.5px; background-color: rgb(245, 245, 245);">&lt;img&nbsp;src=&quot;img.png&quot;&nbsp;alt=&quot;风景图&quot;&nbsp;width=&quot;339&quot;&nbsp;height=&quot;229&quot;&nbsp;usemap=&quot;#Map&quot;&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;map&nbsp;name=&quot;Map&quot;&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;area&nbsp;shape=&quot;rect&quot;&nbsp;coords=&quot;31,28,112,100&quot;&nbsp;href=&quot;http://www.baidu.com&quot;&nbsp;target=&quot;_blank&quot;&nbsp;alt=&quot;方形&quot;&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;area&nbsp;shape=&quot;circle&quot;&nbsp;coords=&quot;187,142,47&quot;&nbsp;href=&quot;http://www.google.com&quot;&nbsp;target=&quot;_blank&quot;&nbsp;alt=&quot;圆形&quot;&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;area&nbsp;shape=&quot;poly&quot;&nbsp;coords=&quot;287,26,240,66,308,112&quot;&nbsp;href=&quot;http://www.soso.com&quot;&nbsp;target=&quot;_blank&quot;&nbsp;alt=&quot;多边形&quot;&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/map&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">解释：通过图片中的热点进行超链接，建议采用 Dreamweaver 进行操作生成的。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">3.&lt;iframe&gt;嵌入另一个文档</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;target=&quot;in&quot; 点击以后 显示超链接内容。<br style="box-sizing: border-box;"/></p><pre class="brush:bash;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; width: 847.5px; background-color: rgb(245, 245, 245);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;index.html&quot;&nbsp;target=&quot;in&quot;&gt;index&lt;/a&gt;&nbsp;|&nbsp;&lt;a&nbsp;href=&quot;http://www.baidu.com&quot;&nbsp;target=&quot;in&quot;&gt;百度&lt;/a&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;iframe&nbsp;src=&quot;http://www.ycku.com&quot;&nbsp;width=&quot;600&quot;&nbsp;height=&quot;500&quot;&nbsp;name=&quot;in&quot;&gt;&lt;/iframe&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">解释：&lt;iframe&gt;表示内嵌一个 HTML 文档。其下的 src 属性表示初始化时显示的页面， width 和 height 表示内嵌文档的长度和高度，name 表示用于 target 的名称。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><br style="box-sizing: border-box;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">4.&lt;embed&gt;嵌入插件内容&nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><br style="box-sizing: border-box;"/></p><pre class="brush:cpp;toolbar:false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; width: 847.5px; background-color: rgb(245, 245, 245);">&lt;embed&nbsp;src=&quot;http://www.tudou.com/v/i4ZZvFwfluI/&amp;bid=05&amp;rpid=50797543&amp;resourceI&nbsp;d=50797543_05_05_99/v.swf&quot;&nbsp;type=&quot;application/x-shockwave-flash&quot;&nbsp;width=&quot;480&quot;&nbsp;height=&quot;400&quot;&gt;&lt;/embed&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;解释：&lt;embed&gt;元素是扩展浏览器的功能，大部分用于添加对插件的支持。这里添加了 一个土豆网的 flash 视频。type 类型表示被插入内容的类型，这里不列出所有，后面如果 遇到其他类型的文件，再继续探讨；width 和 height 表示宽高；src 表示文件路径。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><br style="box-sizing: border-box;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">5.&lt;object&gt;和&lt;param&gt;元素 解释：&lt;object&gt;元素和&lt;embed&gt;一样，只不过 object 是 html4 的标准，而 embed 是 html5 的标准。而 object 不但可以嵌入 flash，还可以嵌入图片等其他内容。由于图片、 音频、视频、插件都有相应标签元素代替，我们这里暂时不对其详细讲解。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><br style="box-sizing: border-box;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">6.&lt;progress&gt;显示进度 &nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><br style="box-sizing: border-box;"/></p><pre class="brush:bash;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; width: 847.5px; background-color: rgb(245, 245, 245);">&lt;progress&nbsp;value=&quot;30&quot;&nbsp;max=&quot;100&quot;&gt;&lt;/progress&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">解释：&lt;progress&gt;元素可以显示一个进度条，一般通过 JS 控制内部的值。IE9 以及更 低版本不支持此元素。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><br style="box-sizing: border-box;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">7.&lt;meter&gt;显示范围里的值&nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><br style="box-sizing: border-box;"/></p><pre class="brush:delphi;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; width: 847.5px; background-color: rgb(245, 245, 245);">&lt;meter&nbsp;value=&quot;90&quot;&nbsp;min=&quot;10&quot;&nbsp;max=&quot;100&quot;&nbsp;low=&quot;40&quot;&nbsp;high=&quot;80&quot;&nbsp;optimum=&quot;60&quot;&gt;&lt;/meter&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">解释：&lt;meter&gt;元素显示某个范围内的值。其下的属性包含：min 和 max 表示范围边界， low 表示小于它的值过低，high 表示大于它的值过高，optimum 表示最佳值，但不出现效 果。IE 浏览器不支持此元素。</p><p><br/></p>', 123, 0, '2016-03-15 19:58:15', '2016-03-15 20:24:54'),
(90, 0, '9262981', 1, 'html form 标签', 'html', '<p>本章主要探讨 HTML5 中表单元素，表单元素用于获取用户的输入数据。</p><p>一．表单元素总汇 在 HTML5 的表单中，提供了各种可供用户输入的表单控件。</p><p><img src="/upload/image/20160316/1458082227138390.png" title="1458082227138390.png" alt="blob.png"/></p><p>二．表单元素解析 1.&lt;form&gt;定义表单 &lt;form method=&quot;post&quot; action=&quot;http://www.haosou.com/&quot;&gt; &lt;button&gt;提交&lt;/button&gt; &lt;/form&gt; 解释：&lt;form&gt;元素主要是定义本身是一组表单。</p><p><img src="/upload/image/20160316/1458082254445895.png" title="1458082254445895.png" alt="blob.png"/></p><p><img src="/upload/image/20160316/1458082261688551.png" title="1458082261688551.png" alt="blob.png"/></p><p>//使用 get 提交数据 method=&quot;get&quot;</p><p>//丧失自动提示功能 autocomplete=&quot;off&quot;</p><p>//使用_blank 新建目标 target=&quot;_blank&quot;</p><p>2.&lt;input&gt;表示用户输入数据 &lt;input name=&quot;user&quot;&gt; 解释：&lt;input&gt;元素默认情况会出现一个单行文本框，有五个属性。</p><p><img src="/upload/image/20160316/1458082275602143.png" title="1458082275602143.png" alt="blob.png"/></p><p>//聚焦光标 &lt;input name=&quot;user&quot; autofocus&gt;</p><p>//禁用 input &lt;input name=&quot;user&quot; disabled&gt;</p><p>//禁止自动完成</p><p>&lt;input name=&quot;user&quot; autocomplete=&quot;off&quot;&gt;</p><p>//表单外的 input &lt;form method=&quot;get&quot; id=&quot;register&quot;&gt; ... &lt;/form&gt; &lt;input name=&quot;email&quot; form=&quot;register&quot;&gt;</p><p>3.&lt;label&gt;添加说明标签 &lt;p&gt;&lt;label for=&quot;user&quot;&gt;用户名：&lt;input id=&quot;user&quot; name=&quot;user&quot;&gt;&lt;/label&gt;&lt;/p&gt; 解释：&lt;label&gt;元素可以关联 input，让用户体验更好。且更加容易设置 CSS 样式。</p><p>4.&lt;fieldset&gt;对表单进行编组 &lt;fieldset&gt;...&lt;/fieldset&gt; 解释：&lt;fieldset&gt;元素可以将一些表单元素组织在一起，形成一个整体。</p><p><img src="/upload/image/20160316/1458082287140584.png" title="1458082287140584.png" alt="blob.png"/></p><p>5.&lt;legend&gt;添加分组说明标签 &lt;fieldset&gt; &lt;legend&gt;注册表单&lt;/legend&gt; &lt;/fieldset&gt; 解释：&lt;legend&gt;元素给分组加上一个标题。</p><p>6.&lt;button&gt;添加按钮 &lt;button type=&quot;submit&quot;&gt;&lt;/button&gt; 解释：&lt;button&gt;元素添加一个按钮，type 属性有如下几个值：</p><p><img src="/upload/image/20160316/1458082302104321.png" title="1458082302104321.png" alt="blob.png"/></p><p>//提交表单 &lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;</p><p>//重置表单 &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt;</p><p>//普通按钮 &lt;button type=&quot;button&quot;&gt;按钮&lt;/button&gt;</p><p>对于 type 属性为 submit 时，按钮还会提供额外的属性。</p><p><img src="/upload/image/20160316/1458082314872985.png" title="1458082314872985.png" alt="blob.png"/></p><p>//表单外关联提交 &lt;button type=&quot;submit&quot; form=&quot;register&quot;&gt;提交&lt;/button&gt;</p><p><br/></p>', 149, 0, '2016-03-16 06:52:02', '0000-00-00 00:00:00'),
(91, 0, '9262981', 1, 'html form 标签中', 'html', '<pre class="brush:bash;toolbar:false">&lt;!DOCTYPE&nbsp;html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;\r\n&lt;title&gt;表单元素[中]&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;form&nbsp;action=&quot;http://www.li.cc&quot;&gt;\r\n\r\n&lt;!--&nbsp;&lt;input&nbsp;type=&quot;text&quot;&nbsp;name=&quot;user&quot;&nbsp;maxlength=&quot;10&quot;&nbsp;size=&quot;30&quot;&nbsp;value=&quot;bnbbs&quot;&nbsp;readonly&nbsp;disabled&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&lt;input&nbsp;type=&quot;text&quot;&nbsp;list=&quot;abc&quot;&nbsp;required&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&lt;input&nbsp;type=&quot;password&quot;&nbsp;placeholder=&quot;请输入密码&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&lt;input&nbsp;type=&quot;search&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&lt;input&nbsp;type=&quot;number&quot;&nbsp;min=&quot;10&quot;&nbsp;max=&quot;100&quot;&nbsp;step=&quot;2&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&nbsp;&lt;input&nbsp;type=&quot;date&quot;&gt;\r\n&lt;input&nbsp;type=&quot;month&quot;&gt;\r\n&lt;input&nbsp;type=&quot;time&quot;&gt;\r\n&lt;input&nbsp;type=&quot;week&quot;&gt;\r\n&lt;input&nbsp;type=&quot;datetime&quot;&gt;\r\n&lt;input&nbsp;type=&quot;datetime-local&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&lt;input&nbsp;type=&quot;color&quot;&nbsp;name=&quot;color&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&nbsp;音乐&lt;input&nbsp;type=&quot;checkbox&quot;&nbsp;name=&quot;music&quot;&nbsp;value=&quot;1&quot;&gt;\r\n体育&lt;input&nbsp;type=&quot;checkbox&quot;&nbsp;name=&quot;sport&quot;&nbsp;value=&quot;2&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&nbsp;&lt;input&nbsp;type=&quot;radio&quot;&nbsp;name=&quot;sex&quot;&nbsp;value=&quot;1&quot;&nbsp;checked&gt;男\r\n&lt;input&nbsp;type=&quot;radio&quot;&nbsp;name=&quot;sex&quot;&nbsp;value=&quot;2&quot;&gt;女&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&nbsp;&lt;input&nbsp;type=&quot;submit&quot;&gt;\r\n&lt;input&nbsp;type=&quot;reset&quot;&gt;\r\n&lt;input&nbsp;type=&quot;button&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&nbsp;&lt;input&nbsp;type=&quot;image&quot;&nbsp;src=&quot;img.png&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&nbsp;&lt;input&nbsp;type=&quot;email&quot;&gt;\r\n&lt;input&nbsp;type=&quot;tel&quot;&gt;\r\n&lt;input&nbsp;type=&quot;url&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;!--&nbsp;&lt;input&nbsp;type=&quot;hidden&quot;&nbsp;value=&quot;1&quot;&nbsp;name=&quot;id&quot;&gt;&nbsp;--&gt;\r\n\r\n&lt;input&nbsp;type=&quot;file&quot;&nbsp;accept=&quot;image/gif&quot;&gt;\r\n\r\n&lt;button&gt;提交&lt;/button&gt;\r\n\r\n&lt;/form&gt;\r\n\r\n&lt;datalist&nbsp;id=&quot;abc&quot;&gt;\r\n&lt;option&nbsp;value=&quot;1&quot;&gt;苹果&lt;/option&gt;\r\n&lt;option&nbsp;value=&quot;2&quot;&gt;桔子&lt;/option&gt;\r\n&lt;option&nbsp;value=&quot;3&quot;&nbsp;label=&quot;香蕉&quot;&gt;\r\n&lt;option&nbsp;value=&quot;菠萝&quot;&gt;\r\n&lt;/datalist&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;</pre><p>一．type 属性总汇 input 元素可以用来生成一个供用户输入数据的简单文本框。在默认的情况下，什么样 的数据均可以输入。而通过不同的属性值，可以限制输入的内容。</p><p><img src="/upload/image/20160316/1458083354504375.png" title="1458083354504375.png" alt="blob.png"/></p><p>二．input 元素解析 1.type 为 text 值时 &lt;input type=&quot;text&quot;&gt; 解释：当 type 值为 text 时，呈现的就是一个可以输入任意字符的文本框，这也是默 认行为。并且，还提供了一些额外的属性</p><p><img src="/upload/image/20160316/1458083381239127.png" title="1458083381239127.png" alt="blob.png"/></p><p>//设置文本框长度 &lt;input type=&quot;text&quot; size=&quot;50&quot;&gt;</p><p>//设置文本框输入字符长度 &lt;input type=&quot;text&quot; maxlength=&quot;10&quot;&gt;</p><p>//设置文本框的初始值 &lt;input type=&quot;text&quot; value=&quot;初始值&quot;&gt;</p><p>//设置文本框输入提示 &lt;input type=&quot;text&quot; placeholder=&quot;请输入内容&quot;&gt;</p><p>//设置文本提供的建议值 &lt;input list=&quot;footlist&quot;&gt;</p><p>&lt;datalist id=&quot;footlist&quot;&gt; &lt;option value=&quot;苹果&quot;&gt;苹果&lt;/option&gt; &lt;option value=&quot;桔子&quot;&gt;桔子&lt;/option&gt; &lt;option value=&quot;香蕉&quot; label=&quot;香蕉&quot;&gt; &lt;option value=&quot;梨子&quot;&gt; &lt;/datalist&gt;</p><p>//设置文本框内容为只读，可以提交数据 &lt;input type=&quot;text&quot; readonly&gt;</p><p>//设置文本框内容不可用，不可以提交数据 &lt;input type=&quot;text&quot; disabled&gt;</p><p>2.type 为 password 值时 &lt;input type=&quot;password&quot;&gt;</p><p>解释：当 type 值为 password 时，一般用于密码框的输入，所有的字符都会显示星号。 密码框也有一些额外属性。</p><p><img src="/upload/image/20160316/1458083410852115.png" title="1458083410852115.png" alt="blob.png"/></p><p>这里除了正则和验证需要放在下一节，其余和文本框一致。</p><p>3.type 为 search 时 &lt;input type=&quot;search&quot;&gt; 解释：和文本框一致，在除 Firefox 浏览器的其他现代浏览器，会显示一个叉来取消 搜索内容。额外属性也和 text 一致。</p><p>4.type 为 number、range 时 &lt;input type=&quot;number&quot;&gt; &lt;input type=&quot;range&quot;&gt; 解释：只限输入数字的文本框，不同浏览器可能显示方式不同。生成一个数值范围文本 框，只是样式是拖动式。额外属性如下：</p><p><img src="/upload/image/20160316/1458083424656621.png" title="1458083424656621.png" alt="blob.png"/></p><p>//范围和步长 &lt;input type=&quot;number&quot; step=&quot;2&quot; min=&quot;10&quot; max=&quot;100&quot;&gt;</p><p>5.type 为 date 系列时 &lt;input type=&quot;date&quot;&gt; &lt;input type=&quot;month&quot;&gt; &lt;input type=&quot;time&quot;&gt; &lt;input type=&quot;week&quot;&gt; &lt;input type=&quot;datetime&quot;&gt; &lt;input type=&quot;datetime-local&quot;&gt; 解释：实现文本框可以获取日期和时间的值，但支持的浏览器不完整。我们测试 Chrome 和 Opera 支持，其他浏览器尚未支持。所以，在获取日期和时间，目前还是推荐使用 jQuery 等前端库来实现日历功能。额外属性和 number 一致。</p><p>6.type 为 color 时 &lt;input type=&quot;color&quot;&gt; 解释：实现文本框获取颜色的功能，最新的现代浏览器测试后 IE 不支持，其余的都能 显示一个颜色对话框提供选择。</p><p>7.type 为 checkbox、radio 时 音乐 &lt;input type=&quot;checkbox&quot;&gt; 体育 &lt;input type=&quot;checkbox&quot;&gt;</p><p>&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot;&gt;男 &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot;&gt;女 解释：生成一个获取布尔值的复选框或固定选项的单选框。额外属性如下</p><p><img src="/upload/image/20160316/1458083446136040.png" title="1458083446136040.png" alt="blob.png"/></p><p>//默认勾选，默认值为 1 &lt;input type=&quot;checkbox&quot; name=&quot;music&quot; checked value=&quot;1&quot;&gt;</p><p>8.type 为 submit、reset 和 button 时 &lt;input type=&quot;submit&quot;&gt; 解释：生成一个按钮，三种模式：提交、重置和一般按钮，和&lt;button&gt;元素相同。</p><p><img src="/upload/image/20160316/1458083459590396.png" title="1458083459590396.png" alt="blob.png"/></p><p>如果是 submit 时，还提供了和&lt;button&gt;元素一样的额外属性：formaction、 formenctype、formmethod、formtarget 和 formnovalidate。</p><p>9.type 为 image 时 &lt;input type=&quot;image&quot; src=&quot;img.png&quot;&gt; 解释：生成一个图片按钮，点击图片就实现提交功能，并且传送了分区响应数据。图片 按钮也提供了一些额外属性。</p><p><img src="/upload/image/20160316/1458083473108599.png" title="1458083473108599.png" alt="blob.png"/></p><p>10.type 为 email、tel、url 时 &lt;input type=&quot;email&quot;&gt; &lt;input type=&quot;tel&quot;&gt; &lt;input type=&quot;url&quot;&gt; 解释：email 为电子邮件格式、tel 为电话格式、url 为网址格式。额外属性和 text 一致。但对于这几种类型，浏览器支持是不同的。email 支持比较好，现在浏览器都支持格 式验证；tel 基本不支持；url 支持一般，部分浏览器只要检测到 http://就能通过。</p><p>11.type 为 hidden 时 &lt;input type=&quot;hidden&quot;&gt; 解释：生成一个隐藏控件，一般用于表单提交时关联主键 ID 提交，而这个数据作为隐 藏存在。</p><p>12.type 为 file 时 &lt;input type=&quot;file&quot;&gt; 解释：生成一个文件上传控件，用于文件的上传。额外提供了一些属性：</p><p><img src="/upload/image/20160316/1458083488792731.png" title="1458083488792731.png" alt="blob.png"/></p>', 158, 0, '2016-03-16 07:11:42', '0000-00-00 00:00:00');
INSERT INTO `pppf_article` (`article_id`, `article_reid`, `article_username`, `article_type`, `article_title`, `article_cid`, `article_content`, `article_readcount`, `article_commendcount`, `article_date`, `article_last_modify_date`) VALUES
(89, 0, '9262981', 1, 'html5 音频与视频', 'html', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">本章主要探讨 HTML5 中音频和视频元素，通过这两个原生的媒体元素向 HTML 页面中 嵌入音频和视频。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">一．音频和视频概述 首先，我们要理解两个概念：容器（container）和编解码器(codec)。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">1.视频容器 音频文件或视频文件，都只是一个容器文件。视频文件包含了音频轨道、视频轨道和其 他一些元数据。视频播放时，音频轨道和视频轨道是绑定在一起的。元数据包含了视频的封 面、标题、子标题、字幕等相关信息。主流视频容器支持的格式为：.avi、.flv、.mp4、.mkv、 .ogg、.webm。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">2.编解码器 音频和视频编码/解码是一组算法，用来对一段特定音频或视频进行解码和编码，以便 音频和视频能够播放。原始的媒体文件体积非常巨大，如果不对其进行编码，那么数据量是 非常惊人的，在互联网上传播则要耗费无法忍受的时间；如果不对其进行解码，就无法将编 码后的数据重组为原始的媒体数据。主流的音频编解码器：AAC、MPEG-3、Ogg Voribs， 视频编解码器：H.264、VP8、Ogg Theora。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">3.浏览器支持情况 起初，HTML5 规范本来打算指定编解码器，但实施起来极为困难。部分厂商已有自己的 标准，不愿实现标准；而有一些编解码器受专利保护，需要支付昂贵费用。最终放弃了统一 规范的要求，导致各个浏览器实现自己的标准。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="http://www.9262981.com/upload/image/20160315/1458046526576841.png" title="1458046526576841.png" alt="blob.png" style="box-sizing: border-box; border: 0px; vertical-align: middle; width: 847.5px;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">除了上面三款浏览器，还有 Safari5+支持 MPEG-4,Opera11 支持 WebM 和 OGG，通过 这组数据，只要备好 MP4 和 OGG 格式的即可，但对于新的高清标准 WebM，当然是非常必要 的。因为 WebM 不但清晰度高，而且免费，不受限制许可的使用源码和专利权。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">目前 Chrome 浏览器，为了推广 WebM 格式的视频。声称未来将放弃 H.264 编码的视频， 所以有可能在以后的版本中无法播放 MP4 的视频。当然，目前演示的版本还是支持的。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">二．video 视频元素 以往的视频播放，需要借助 Flash 插件才可以实现。但 Flash 插件的不稳定性经常让 浏览器导致崩溃，因此很多浏览器或系统厂商开始抛弃它。而取代它的正是 HTML5 的 video 元素。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="http://www.9262981.com/upload/image/20160315/1458046573133587.png" title="1458046573133587.png" alt="blob.png" style="box-sizing: border-box; border: 0px; vertical-align: middle; width: 847.5px;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">1.嵌入一个 WebM 视频 &lt;video src=&quot;test.webm&quot; width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/video&gt; 解释：&lt;video&gt;插入一个视频，主流的视频为.webm，.mp4，.ogg 等。src 表示资源 URL；width 表示宽度；height 表示高度。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">2.附加一些属性 &lt;video src=&quot;test.webm&quot; width=&quot;800&quot; height=&quot;600&quot; autoplay controls loop muted&gt;&lt;/video&gt; 解释：autoplay 表示自动开始播放；controls 表示显示播放控件；loop 表示循环播 放；muted 表示静音。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">3.预加载设置 &lt;video src=&quot;http://li.cc/test.webm&quot; width=&quot;800&quot; height=&quot;600&quot; controls preload=&quot;none&quot;&gt;&lt;/video&gt; 解释：preload 属性有三个值：none 表示播放器什么都不加载；metadata 表示播放 之前只能加载元数据（宽高、第一帧画面等信息）；auto 表示请求浏览器尽快下载整个视 频。 4.使用预览图 &lt;video src=&quot;http://li.cc/test.webm&quot; width=&quot;800&quot; height=&quot;600&quot; controls poster=&quot;img.png&quot;&gt;&lt;/video&gt;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">解释：poster 属性表示在视频的第一帧，做一张预览图。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">5.兼容多个浏览器 &lt;video width=&quot;800&quot; height=&quot;600&quot; controls poster=&quot;img.png&quot;&gt; &lt;source src=&quot;test.webm&quot;&gt; &lt;source src=&quot;test.mp4&quot;&gt; &lt;source src=&quot;test.ogg&quot;&gt; &lt;object&gt;这里引入 flash 播放器实现 IE9 以下，但没必要了&lt;/object&gt; &lt;/video&gt; 解释：通过&lt;source&gt;元素引入多种格式的视频，让更多的浏览器保持兼容。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">二．audio 音频元素 和 video 元素一样，audio 元素用于嵌入音频内容，而音频元素的属性和视频元素类 似。音频的支持度和视频类似，使用&lt;source&gt;元素引入多种格式兼容即可。主流的音频格 式有：.mp3，.m4a，.ogg，.wav。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="http://www.9262981.com/upload/image/20160315/1458046583286247.png" title="1458046583286247.png" alt="blob.png" style="box-sizing: border-box; border: 0px; vertical-align: middle; width: 847.5px;"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">1.嵌入一个音频 &lt;audio src=&quot;test.mp3&quot; controls autoplay&gt;&lt;/audio&gt; 解释：和嵌入视频一个道理。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">2.兼容多个浏览器 &lt;audio controls&gt; &lt;source src=&quot;test.mp3&quot;&gt; &lt;source src=&quot;test.m4a&quot;&gt; &lt;source src=&quot;test.wav&quot;&gt; &lt;/audio&gt; 解释：略。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(148, 163, 168); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">PS：更多设计到 API 的 JavaScript 控制，将在以后的基于 JavaScript 基础后讲解。</p><p><br/></p>', 116, 0, '2016-03-15 20:29:46', '2016-03-15 21:09:40'),
(92, 0, '9262981', 1, 'innerHTML和innerText的用法（动态改变网页内容）', 'javascript', '<p>				</p><p><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">最近在学习JavaScript，觉得innerHTML和innerText太有用了，利用它们，我们可以试自己的网页实现动态化。不过在使用的过程中，千万要注意它们的大小写，因为错一点您就得不到预期的效果了。这是全新的方法，当您掌握它以后将可随心所欲的设计动态内容了，不可错过哦！&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><strong style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">一:动态改变文本和Html&nbsp;</strong><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);"></span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/></p><p>Html代码&nbsp;&nbsp;<a title="收藏这段代码" style="color: rgb(16, 138, 198); text-decoration: underline;"><img class="star" src="/upload/image/20160417/1460828438901472.png" alt="收藏代码" style="border: 0px; width: 15px; height: 14px;" width="15" height="14" border="0" vspace="0" title="收藏代码"/></a></p><ol start="1" class="dp-xml list-paddingleft-2" style="font-size: 1em; line-height: 1.4em; margin-bottom: 1px; padding: 2px 0px; border: 1px solid rgb(209, 215, 220); color: rgb(43, 145, 175);"><li><p><span style="color: black;">&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01&nbsp;Transitional//EN&quot;&nbsp;&quot;http://www.w3.org/TR/html4/loose.dtd&quot;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;"><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">html</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">head</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">meta</span>&nbsp;<span class="attribute" style="color: red;">http-equiv</span>=&quot;Content-Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content=&quot;<span class="attribute-value" style="color: blue;">text</span>/html;<span class="attribute" style="color: red;">charset</span>=<span class="attribute-value" style="color: blue;">UTF</span>-8&quot;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">title</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>innerText和innerHTML用法实例<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">title</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">script</span>&nbsp;<span class="attribute" style="color: red;">language</span>=<span class="attribute-value" style="color: blue;">&quot;JavaScript&quot;</span>&nbsp;<span class="attribute" style="color: red;">type</span>=<span class="attribute-value" style="color: blue;">&quot;text/javascript&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;changeText()&nbsp;{&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="attribute" style="color: red;">DT.innerText</span>=<span class="attribute-value" style="color: blue;">&quot;我很好!&quot;</span>;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}//function&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;changeHtml()&nbsp;{&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="attribute" style="color: red;">DH.innerHTML</span>=<span class="attribute-value" style="color: blue;">&quot;&lt;i&gt;&lt;u&gt;我姓肖!&lt;/u&gt;&lt;/i&gt;&quot;</span>;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}//function&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;back()&nbsp;{&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="attribute" style="color: red;">DT.innerText</span>=<span class="attribute-value" style="color: blue;">&quot;您好吗?&quot;</span>;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="attribute" style="color: red;">DH.innerHTML</span>=<span class="attribute-value" style="color: blue;">&quot;您姓什么?&quot;</span>;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">script</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">head</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">body</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">p</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">font</span>&nbsp;<span class="attribute" style="color: red;">color</span>=<span class="attribute-value" style="color: blue;">&quot;gray&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>请点击下边的文字……<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">font</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">ul</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">li</span>&nbsp;<span class="attribute" style="color: red;">id</span>=<span class="attribute-value" style="color: blue;">&quot;DT&quot;</span>&nbsp;<span class="attribute" style="color: red;">onclick</span>=<span class="attribute-value" style="color: blue;">&quot;changeText()&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>您好吗?&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">li</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">li</span>&nbsp;<span class="attribute" style="color: red;">id</span>=<span class="attribute-value" style="color: blue;">&quot;DH&quot;</span>&nbsp;<span class="attribute" style="color: red;">onclick</span>=<span class="attribute-value" style="color: blue;">&quot;changeHtml()&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>您姓什么?&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">li</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">li</span>&nbsp;<span class="attribute" style="color: red;">onclick</span>=<span class="attribute-value" style="color: blue;">&quot;back()&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>恢复原样!&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">li</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">ul</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">body</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;"><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">html</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li></ol><p><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">innerText属性用来定义对象所要输出的文本，在本例中innerText把对象DT中的文本“您好吗?”变成了“我很好!”（语句DT.innerText=&quot;我很好!&quot;）。而对对象DH的改变用了innerHTML属性，它除了有innerText的作用外，还可改变对象DH内部的HTML语句，于是它把文本变成了“我姓肖!”，而且文本输出改成了斜体（&lt;i&gt;&lt;/i&gt;）并下加一条直线（&lt;u&gt;&lt;/u&gt;），即语句DH.innerHTML=&quot;&lt;i&gt;&lt;u&gt;我姓肖!&lt;/u&gt;&lt;/i&gt;&quot;。&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><strong style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">二:文本的动态输入与输出</strong><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/></p><p>Html代码&nbsp;&nbsp;<a title="收藏这段代码" style="color: rgb(16, 138, 198); text-decoration: underline;"><img class="star" src="/upload/image/20160417/1460828438901472.png" alt="收藏代码" style="border: 0px;"/></a></p><ol start="1" class="dp-xml list-paddingleft-2" style="font-size: 1em; line-height: 1.4em; margin-bottom: 1px; padding: 2px 0px; border: 1px solid rgb(209, 215, 220); color: rgb(43, 145, 175);"><li><p><span style="color: black;">&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01&nbsp;Transitional//EN&quot;&nbsp;&quot;http://www.w3.org/TR/html4/loose.dtd&quot;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;"><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">html</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">head</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">meta</span>&nbsp;<span class="attribute" style="color: red;">http-equiv</span>=<span class="attribute-value" style="color: blue;">&quot;Content-Type&quot;</span>&nbsp;<span class="attribute" style="color: red;">content</span>=<span class="attribute-value" style="color: blue;">&quot;text/html;&nbsp;charset=UTF-8&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">title</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>用innerText和innerHTML制作动态网页<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">title</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">style</span>&nbsp;<span class="attribute" style="color: red;">type</span>=<span class="attribute-value" style="color: blue;">&quot;css/text&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.blue&nbsp;{&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color:blue;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font-size:12pt;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">style</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">script</span>&nbsp;<span class="attribute" style="color: red;">language</span>=<span class="attribute-value" style="color: blue;">&quot;JavaScript&quot;</span>&nbsp;<span class="attribute" style="color: red;">type</span>=<span class="attribute-value" style="color: blue;">&quot;text/javascript&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;OutputText()&nbsp;{&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(frm.txt.text!=&quot;&quot;)&nbsp;{&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="attribute" style="color: red;">Output.innerHTML</span>=<span class="attribute-value" style="color: blue;">&quot;在此处输出文本：&lt;u&gt;&quot;</span>+frm.txt.value+&quot;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">u</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&quot;;}&nbsp;//Output为一对象。&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="attribute" style="color: red;">Output.innerText</span>=<span class="attribute-value" style="color: blue;">&quot;在此处输出文本：&quot;</span>;}&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}//function&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">script</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">head</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">body</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">p</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">br</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">p</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">form</span>&nbsp;<span class="attribute" style="color: red;">name</span>=<span class="attribute-value" style="color: blue;">&quot;frm&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">p</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">font</span>&nbsp;<span class="attribute" style="color: red;">color</span>=<span class="attribute-value" style="color: blue;">&quot;gray&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>请在文本框中输入文字:<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">font</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">input</span>&nbsp;<span class="attribute" style="color: red;">type</span>=<span class="attribute-value" style="color: blue;">&quot;text&quot;</span>&nbsp;<span class="attribute" style="color: red;">name</span>=<span class="attribute-value" style="color: blue;">&quot;txt&quot;</span>&nbsp;<span class="attribute" style="color: red;">size</span>=<span class="attribute-value" style="color: blue;">&quot;50&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">br</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">input</span>&nbsp;<span class="attribute" style="color: red;">type</span>=<span class="attribute-value" style="color: blue;">&quot;button&quot;</span>&nbsp;<span class="attribute" style="color: red;">value</span>=<span class="attribute-value" style="color: blue;">&quot;输出文本&quot;</span>&nbsp;<span class="attribute" style="color: red;">name</span>=<span class="attribute-value" style="color: blue;">&quot;B1&quot;</span>&nbsp;<span class="attribute" style="color: red;">class</span>=<span class="attribute-value" style="color: blue;">&quot;blue&quot;</span>&nbsp;<span class="attribute" style="color: red;">onclick</span>=<span class="attribute-value" style="color: blue;">&quot;OutputText()&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">p</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">form</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">p</span>&nbsp;<span class="attribute" style="color: red;">id</span>=<span class="attribute-value" style="color: blue;">&quot;Output&quot;</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在此处输出文本：&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">p</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">body</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;"><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&lt;/</span><span class="tag-name" style="color: rgb(0, 102, 153); font-weight: bold;">html</span><span class="tag" style="color: rgb(0, 102, 153); font-weight: bold;">&gt;</span>&nbsp;&nbsp;</span></p></li></ol><p><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">此例的效果是先在文本框中输入文本，然后按“输出文本”的按钮，接着网页便会自动输出您所输入的文本&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><strong style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);">三:注意innerHTML有自动检查语法的功能,它会把不完整的HTML代码补充完整,这点可以说是神奇,例如下面的这段脚本</strong><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/></p><p>Javascript代码&nbsp;&nbsp;<a title="收藏这段代码" style="color: rgb(16, 138, 198); text-decoration: underline;"><img class="star" src="/upload/image/20160417/1460828438901472.png" alt="收藏代码" style="border: 0px;"/></a></p><ol start="1" class="dp-c list-paddingleft-2" style="font-size: 1em; line-height: 1.4em; margin-bottom: 1px; padding: 2px 0px; border: 1px solid rgb(209, 215, 220); color: rgb(43, 145, 175);"><li><p><span style="color: black;"><span class="keyword" style="color: rgb(127, 0, 85); font-weight: bold;">function</span>&nbsp;Get()&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">{&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;document.getElementById(<span class="string" style="color: blue;">&quot;tab&quot;</span>).innerHTML=<span class="string" style="color: blue;">&quot;&lt;table&gt;&lt;tr&gt;&quot;</span>;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;&nbsp;alert(document.getElementById(<span class="string" style="color: blue;">&quot;tab&quot;</span>).innerHTML);&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">}&nbsp;&nbsp;</span></p></li></ol><p><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">运行的效果竟然是这样的:&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">所以请各位在使用时一定要小心.&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">例如在做这样的操作时就会出错.&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">运行的效果竟然是这样的:&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/></p><p>Javascript代码&nbsp;&nbsp;<a title="收藏这段代码" style="color: rgb(16, 138, 198); text-decoration: underline;"><img class="star" src="/upload/image/20160417/1460828438901472.png" alt="收藏代码" style="border: 0px;"/></a></p><ol start="1" class="dp-c list-paddingleft-2" style="font-size: 1em; line-height: 1.4em; margin-bottom: 1px; padding: 2px 0px; border: 1px solid rgb(209, 215, 220); color: rgb(43, 145, 175);"><li><p><span style="color: black;">list.innerHTML=<span class="string" style="color: blue;">&quot;&lt;table&gt;&lt;tr&gt;&quot;</span>;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">list.innerHTML+=<span class="string" style="color: blue;">&quot;&lt;td&gt;&quot;</span>&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">............&nbsp;&nbsp;</span></p></li></ol><p><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">必须用一个中间变量&nbsp;</span><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/></p><p>Javascript代码&nbsp;&nbsp;<a title="收藏这段代码" style="color: rgb(16, 138, 198); text-decoration: underline;"><img class="star" src="/upload/image/20160417/1460828438901472.png" alt="收藏代码" style="border: 0px;"/></a></p><ol start="1" class="dp-c list-paddingleft-2" style="font-size: 1em; line-height: 1.4em; margin-bottom: 1px; padding: 2px 0px; border: 1px solid rgb(209, 215, 220); color: rgb(43, 145, 175);"><li><p><span style="color: black;"><span class="keyword" style="color: rgb(127, 0, 85); font-weight: bold;">var</span>&nbsp;html=<span class="string" style="color: blue;">&quot;&lt;table&gt;&lt;tr&gt;&quot;</span>;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">html+=<span class="string" style="color: blue;">&quot;&lt;td&gt;&quot;</span>;&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">.........&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">&nbsp;&nbsp;</span></p></li><li><p><span style="color: black;">list.innerHTML=html;&nbsp;&nbsp;</span></p></li></ol><p><br style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);">这样问题就可以得到解决.&nbsp;</span></p><p><br/></p><p>			</p>', 111, 0, '2016-04-17 01:41:01', '2016-04-17 07:04:59');
INSERT INTO `pppf_article` (`article_id`, `article_reid`, `article_username`, `article_type`, `article_title`, `article_cid`, `article_content`, `article_readcount`, `article_commendcount`, `article_date`, `article_last_modify_date`) VALUES
(93, 0, '9262981', 1, 'Console命令详解,让调试js代码变得更简单', 'javascript', '<p><a href="http://getfirebug.com/" target="_blank">Firebug</a>是网页开发的利器，能够极大地提升工作效率。</p><p>但是，它不太容易上手。我曾经翻译过一篇<a href="http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html" target="_blank">《Firebug入门指南》</a>，介绍了一些基本用法。今天，继续介绍它的高级用法。</p><p>===================================</p><p><strong>Firebug控制台详解</strong></p><p>转自：阮一峰<br/>出处：http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html</p><p><img src="http://image.beekka.com/blog/201103/bg2011032616.png" alt=""/></p><p><br/> 控制台（Console）是Firebug的第一个面板，也是最重要的面板，主要作用是显示网页加载过程中产生各类信息。</p><p><strong>一、显示信息的命令</strong></p><p>Firebug内置一个console对象，提供5种方法，用来显示信息。</p><p>最简单的方法是console.log()，可以用来取代alert()或document.write()。比如，在网页脚本中使用console.log(&quot;Hello World&quot;)，加载时控制台就会自动显示如下内容。</p><p><img src="http://image.beekka.com/blog/201103/bg2011032601.png" alt=""/></p><p>另外，根据信息的不同性质，console对象还有4种显示信息的方法，分别是一般信息console.info()、除错信息console.debug()、警告提示console.warn()、错误提示console.error()。</p><p>比如，在网页脚本中插入下面四行：</p><blockquote><p>　　console.info(&quot;这是info&quot;);</p><p>　　console.debug(&quot;这是debug&quot;);</p><p>　　console.warn(&quot;这是warn&quot;);</p><p>　　console.error(&quot;这是error&quot;);</p></blockquote><p>加载时，控制台会显示如下内容。</p><p><img src="http://image.beekka.com/blog/201103/bg2011032602.png" alt=""/></p><p>可以看到，不同性质的信息前面有不同的图标，并且每条信息后面都有超级链接，点击后跳转到网页源码的相应行。</p><p><strong>二、占位符</strong></p><p>console对象的上面5种方法，都可以使用printf风格的占位符。不过，占位符的种类比较少，只支持字符（%s）、整数（%d或%i）、浮点数（%f）和对象（%o）四种。</p><p>比如，</p><blockquote><p>　　console.log(&quot;%d年%d月%d日&quot;,2011,3,26);</p><p>　　console.log(&quot;圆周率是%f&quot;,3.1415926);</p></blockquote><p><img src="http://image.beekka.com/blog/201103/bg2011032603.png" alt=""/></p><p>%o占位符，可以用来查看一个对象内部情况。比如，有这样一个对象：</p><blockquote><p>　　var dog = {} ;</p><p>　　dog.name = &quot;大毛&quot; ;</p><p>　　dog.color = &quot;黄色&quot;;</p></blockquote><p>然后，对它使用o%占位符。</p><blockquote><p>　　console.log(&quot;%o&quot;,dog);</p></blockquote><p><img src="http://image.beekka.com/blog/201103/bg2011032604.png" alt=""/></p><p><strong>三、分组显示</strong></p><p>如果信息太多，可以分组显示，用到的方法是console.group()和console.groupEnd()。</p><blockquote><p>　　console.group(&quot;第一组信息&quot;);</p><p>　　　　console.log(&quot;第一组第一条&quot;);</p><p>　　　　console.log(&quot;第一组第二条&quot;);</p><p>　　console.groupEnd();</p><p>　　console.group(&quot;第二组信息&quot;);</p><p>　　　　console.log(&quot;第二组第一条&quot;);</p><p>　　　　console.log(&quot;第二组第二条&quot;);</p><p>　　console.groupEnd();</p></blockquote><p><img src="http://image.beekka.com/blog/201103/bg2011032605.png" alt=""/></p><p>点击组标题，该组信息会折叠或展开。</p><p><img src="http://image.beekka.com/blog/201103/bg2011032606.png" alt=""/></p><p><strong>四、console.dir()</strong></p><p>console.dir()可以显示一个对象所有的属性和方法。</p><p>比如，现在为第二节的dog对象，添加一个bark()方法。</p><blockquote><p>　　dog.bark = function(){alert(&quot;汪汪汪&quot;);};</p></blockquote><p>然后，显示该对象的内容，</p><blockquote><p>　　console.dir(dog);</p></blockquote><p><img src="http://image.beekka.com/blog/201103/bg2011032607.png" alt=""/></p><p><strong>五、console.dirxml()</strong></p><p>console.dirxml()用来显示网页的某个节点（node）所包含的html/xml代码。</p><p>比如，先获取一个表格节点，</p><blockquote><p>　　var table = document.getElementById(&quot;table1&quot;);</p></blockquote><p>然后，显示该节点包含的代码。</p><blockquote><p>　　console.dirxml(table);</p></blockquote><p><img src="http://image.beekka.com/blog/201103/bg2011032608.png" alt=""/></p><p><strong>六、console.assert()</strong></p><p>console.assert()用来判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。</p><p>比如，下面两个判断的结果都为否。</p><blockquote><p>　　var result = 0;</p><p>　　console.assert( result );</p><p>　　var year = 2000;</p><p>　　console.assert(year == 2011 );</p></blockquote><p><img src="http://image.beekka.com/blog/201103/bg2011032609.png" alt=""/></p><p><strong>七、console.trace()</strong></p><p>console.trace()用来追踪函数的调用轨迹。</p><p>比如，有一个加法器函数。</p><blockquote><p>　　function add(a,b){</p><p>　　　　return a+b;</p><p>　　}</p></blockquote><p>我想知道这个函数是如何被调用的，在其中加入console.trace()方法就可以了。</p><blockquote><p>　　function add(a,b){</p><p>　　　　console.trace();</p><p>　　　　return a+b;</p><p>　　}</p></blockquote><p>假定这个函数的调用代码如下：</p><blockquote><p>　　var x = add3(1,1);</p><p>　　function add3(a,b){return add2(a,b);}</p><p>　　function add2(a,b){return add1(a,b);}</p><p>　　function add1(a,b){return add(a,b);}</p></blockquote><p>运行后，会显示add()的调用轨迹，从上到下依次为add()、add1()、add2()、add3()。</p><p><img src="http://image.beekka.com/blog/201103/bg2011032610.png" alt=""/></p><p><strong>八、计时功能</strong></p><p>console.time()和console.timeEnd()，用来显示代码的运行时间。</p><blockquote><p>　　console.time(&quot;计时器一&quot;);</p><p>　　for(var i=0;i&lt;1000;i++){</p><p>　　　　for(var j=0;j&lt;1000;j++){}</p><p>　　}</p><p>　　console.timeEnd(&quot;计时器一&quot;);</p></blockquote><p><img src="http://image.beekka.com/blog/201103/bg2011032611.png" alt=""/></p><p><strong>九、性能分析</strong></p><p>性能分析（Profiler）就是分析程序各个部分的运行时间，找出瓶颈所在，使用的方法是console.profile()。</p><p>假定有一个函数Foo()，里面调用了另外两个函数funcA()和funcB()，其中funcA()调用10次，funcB()调用1次。</p><blockquote><p>　　function Foo(){</p><p>　　　　for(var i=0;i&lt;10;i++){funcA(1000);}</p><p>　　　　funcB(10000);</p><p>　　}</p><p>　　function funcA(count){</p><p>　　　　for(var i=0;i&lt;count;i++){}</p><p>　　}</p><p>　　function funcB(count){</p><p>　　　　for(var i=0;i&lt;count;i++){}</p><p>　　}</p></blockquote><p>然后，就可以分析Foo()的运行性能了。</p><blockquote><p>　　console.profile(&#39;性能分析器一&#39;);</p><p>　　Foo();</p><p>　　console.profileEnd();</p></blockquote><p>控制台会显示一张性能分析表，如下图。</p><p><img src="http://image.beekka.com/blog/201103/bg2011032612.png" alt=""/></p><p>标题栏提示，一共运行了12个函数，共耗时2.656毫秒。其中funcA()运行10次，耗时1.391毫秒，最短运行时间0.123毫秒，最长0.284毫秒，平均0.139毫秒；funcB()运行1次，耗时1.229ms毫秒。</p><p>除了使用console.profile()方法，firebug还提供了一个&quot;概况&quot;（Profiler）按钮。第一次点击该按钮，&quot;性能分析&quot;\r\n 开始，你可以对网页进行某种操作（比如ajax操作），然后第二次点击该按钮，&quot;性能分析&quot;结束，该操作引发的所有运算就会进行性能分析。</p><p><img src="http://image.beekka.com/blog/201103/bg2011032613.png" alt=""/></p><p><strong>十、属性菜单</strong></p><p>控制台面板的名称后面，有一个倒三角，点击后会显示属性菜单。</p><p><img src="http://image.beekka.com/blog/201103/bg2011032614.png" alt=""/></p><p>默认情况下，控制台只显示Javascript错误。如果选中Javascript警告、CSS错误、XML错误都送上，则相关的提示信息都会显示。</p><p>这里比较有用的是&quot;显示XMLHttpRequests&quot;，也就是显示ajax请求。选中以后，网页的所有ajax请求，都会在控制台面板显示出来。</p><p>比如，点击一个<a href="http://developer.yahoo.com/yui/examples/datatable/dt_xhrlocalxml.html" target="_blank">YUI示例</a>，控制台就会告诉我们，它用ajax方式发出了一个GET请求，http请求和响应的头信息和内容主体，也都可以看到。</p><p><img src="http://image.beekka.com/blog/201103/bg2011032615.png" alt=""/></p><p><strong>[参考文献]</strong></p><p>* <a href="http://michaelsync.net/2007/09/09/firebug-tutorial-logging-profiling-and-commandline-part-i" target="_blank">Firebug Tutorial - Logging, Profiling and CommandLine (Part I)</a></p><p>* <a href="http://michaelsync.net/2007/09/10/firebug-tutorial-logging-profiling-and-commandline-part-ii" target="_blank">Firebug Tutorial - Logging, Profiling and CommandLine (Part II)</a></p><p>（完）</p><p><br/></p>', 132, 0, '2016-04-22 15:48:37', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- 表的结构 `pppf_category`
--

CREATE TABLE IF NOT EXISTS `pppf_category` (
  `category_id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT,
  `category_name` varchar(10) NOT NULL,
  PRIMARY KEY (`category_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=7 ;

--
-- 转存表中的数据 `pppf_category`
--

INSERT INTO `pppf_category` (`category_id`, `category_name`) VALUES
(1, 'javascript'),
(2, 'css'),
(3, 'php'),
(4, '正则'),
(5, 'html'),
(6, 'XX');

-- --------------------------------------------------------

--
-- 表的结构 `pppf_dir`
--

CREATE TABLE IF NOT EXISTS `pppf_dir` (
  `dir_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `dir_name` varchar(20) NOT NULL,
  `dir_type` tinyint(1) unsigned NOT NULL,
  `dir_password` char(40) DEFAULT NULL,
  `dir_content` varchar(200) DEFAULT NULL,
  `dir_dir` varchar(200) NOT NULL,
  `dir_date` datetime NOT NULL,
  PRIMARY KEY (`dir_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=28 ;

--
-- 转存表中的数据 `pppf_dir`
--

INSERT INTO `pppf_dir` (`dir_id`, `dir_name`, `dir_type`, `dir_password`, `dir_content`, `dir_dir`, `dir_date`) VALUES
(1, '', 0, NULL, '', 'photo/1457411455', '2016-03-08 12:30:55'),
(2, '', 0, NULL, '', 'photo/1457411460', '2016-03-08 12:31:00'),
(3, '', 0, NULL, '', 'photo/1457411486', '2016-03-08 12:31:26'),
(4, '', 0, NULL, '', 'photo/1457411672', '2016-03-08 12:34:32'),
(5, 'xlx7410', 0, NULL, '123', 'photo/1457411708', '2016-03-08 12:35:08'),
(6, 'xlx7410', 1, NULL, '123123123123', 'photo/1457411726', '2016-03-08 12:35:26'),
(7, '名称', 0, NULL, '简介', 'photo/1457411878', '2016-03-08 12:37:58'),
(8, 'xlx7410', 1, NULL, '123123123', 'photo/1457413607', '2016-03-08 13:06:47'),
(9, 'xlx7410', 1, NULL, '123123123', 'photo/1457413857', '2016-03-08 13:10:57'),
(10, 'xlx7410', 1, NULL, '123123123', 'photo/1457413889', '2016-03-08 13:11:29'),
(11, '名称', 1, '', '相册简介', 'photo/1457414060', '2016-03-08 13:14:20'),
(12, 'xlx7410', 1, NULL, '12312321', 'photo/1457414171', '2016-03-08 13:16:11'),
(13, 'xlx7410', 1, NULL, '123123', 'photo/1457414226', '2016-03-08 13:17:06'),
(14, 'xlx7410', 0, NULL, '123', 'photo/1457414292', '2016-03-08 13:18:12'),
(15, 'xlx7410', 1, '601f1889667efaebb33b8c12572835da3f027f78', '123', 'photo/1457414308', '2016-03-08 13:18:28'),
(16, 'xlx7410', 1, NULL, '123', 'photo/1457414484', '2016-03-08 13:21:24'),
(17, 'xlx7410', 1, NULL, '123', 'photo/1457414534', '2016-03-08 13:22:14'),
(18, 'xlx7410', 1, '601f1889667efaebb33b8c12572835da3f027f78', '123', 'photo/1457414704', '2016-03-08 13:25:04'),
(19, 'xlx7410', 1, NULL, '123123123', 'photo/1457414992', '2016-03-08 13:29:52'),
(20, 'xlx7410', 1, NULL, '123123', 'photo/1457415036', '2016-03-08 13:30:36'),
(21, 'xlx7410', 1, '88ea39439e74fa27c09a4fc0bc8ebe6d00978392', '123', 'photo/1457415079', '2016-03-08 13:31:19'),
(22, 'xlx7410', 1, '88ea39439e74fa27c09a4fc0bc8ebe6d00978392', '123', 'photo/1457415170', '2016-03-08 13:32:50'),
(23, 'xlx7410', 1, NULL, '123', 'photo/1457415199', '2016-03-08 13:33:19'),
(24, 'xlx7410', 1, NULL, '123', 'photo/1457415223', '2016-03-08 13:33:43'),
(25, 'xlx7410', 1, NULL, '123', 'photo/1457415264', '2016-03-08 13:34:24'),
(26, 'xlx7410', 1, NULL, '123', 'photo/1457415316', '2016-03-08 13:35:16'),
(27, 'xlx7410', 1, '601f1889667efaebb33b8c12572835da3f027f78', '123', 'photo/1457415352', '2016-03-08 13:35:52');

-- --------------------------------------------------------

--
-- 表的结构 `pppf_flower`
--

CREATE TABLE IF NOT EXISTS `pppf_flower` (
  `flower_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `flower_touser` varchar(20) NOT NULL,
  `flower_fromuser` varchar(20) NOT NULL,
  `flower_count` mediumint(8) unsigned NOT NULL,
  `flower_content` varchar(200) NOT NULL,
  `flower_date` datetime NOT NULL,
  PRIMARY KEY (`flower_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=10 ;

--
-- 转存表中的数据 `pppf_flower`
--

INSERT INTO `pppf_flower` (`flower_id`, `flower_touser`, `flower_fromuser`, `flower_count`, `flower_content`, `flower_date`) VALUES
(1, '2134123412', 'xlx7410', 4, '非常欣赏你哦！送你小花一朵！', '2016-01-27 13:00:33'),
(2, 'qweasd', 'xlx7410', 7, '非常欣赏你哦！送你小花一朵！', '2016-01-27 13:02:22'),
(3, 'qweasd', 'xlx7410', 7, '非常欣赏你哦！送你小花一朵！', '2016-01-27 13:04:18'),
(7, 'xlx7410', 'xlx7410', 2, '非常欣赏你哦！送你小花一朵！', '2016-01-27 13:17:56'),
(6, 'xlx7410', 'xlx7410', 1, '非常欣赏你哦！送你小花一朵！', '2016-01-27 13:17:37'),
(8, 'xlx7410', 'xlx7410', 10, '非常欣赏你哦！送你小花一朵！', '2016-01-27 13:18:37'),
(9, '123222xxx', 'xlx7410', 5, '非常欣赏你哦！送你小花一朵！', '2016-02-10 02:15:14');

-- --------------------------------------------------------

--
-- 表的结构 `pppf_friend`
--

CREATE TABLE IF NOT EXISTS `pppf_friend` (
  `friend_id` mediumint(8) NOT NULL AUTO_INCREMENT,
  `friend_touser` varchar(20) NOT NULL COMMENT '//被添加的好友',
  `friend_fromuser` varchar(20) NOT NULL COMMENT '//添加好友方',
  `friend_content` varchar(200) NOT NULL COMMENT '//验证信息',
  `friend_state` tinyint(1) NOT NULL DEFAULT '0' COMMENT '//验证',
  `friend_date` datetime NOT NULL COMMENT '//添加时间',
  PRIMARY KEY (`friend_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=10 ;

--
-- 转存表中的数据 `pppf_friend`
--

INSERT INTO `pppf_friend` (`friend_id`, `friend_touser`, `friend_fromuser`, `friend_content`, `friend_state`, `friend_date`) VALUES
(1, '2134123412', 'xlx7410', '您好，可以加个好友吗？', 1, '2016-01-20 22:48:23'),
(2, '111222', 'xlx7410', '您好，可以加个好友吗？', 0, '2016-01-21 19:36:24'),
(3, 'erqwer', 'xlx7410', '您好，可以加个好友吗？', 0, '2016-01-21 19:42:22'),
(4, '1112223334', 'xlx7410', '您好，可以加个好友吗？', 0, '2016-01-22 11:12:29'),
(8, 'xlx7410', '123123', '123123123213123123123123123？', 0, '2016-01-25 12:22:42'),
(9, '123123', 'xlx7410', '您好，可以加个好友吗？', 1, '2016-01-25 15:37:19');

-- --------------------------------------------------------

--
-- 表的结构 `pppf_mess`
--

CREATE TABLE IF NOT EXISTS `pppf_mess` (
  `mess_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `mess_touser` varchar(20) NOT NULL COMMENT '//收件人',
  `mess_fromuser` varchar(20) NOT NULL COMMENT '//发信人',
  `mess_content` varchar(200) NOT NULL COMMENT '发信内容',
  `mess_state` tinyint(1) NOT NULL DEFAULT '0' COMMENT '//短信状态',
  `mess_date` datetime NOT NULL COMMENT '发送时间',
  PRIMARY KEY (`mess_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=49 ;

--
-- 转存表中的数据 `pppf_mess`
--

INSERT INTO `pppf_mess` (`mess_id`, `mess_touser`, `mess_fromuser`, `mess_content`, `mess_state`, `mess_date`) VALUES
(1, 'qweasd', 'xlx7410', 'asdfsadfsadfsadfsafsadfsdfsdaf', 0, '2016-01-13 15:59:44'),
(2, '2134123412', 'xlx7410', 'SDFSDFSDFSDFSDFSDFSDF', 0, '2016-01-13 20:38:28'),
(3, 'sdfsdfsdf123', 'xlx7410', '123123123123123', 0, '2016-01-14 12:05:37'),
(31, 'xlx7410', 'xlx7410', '阿凡达速度发士大夫撒地方撒地方士大夫士大夫撒地方', 1, '2016-01-19 07:06:53'),
(32, 'xlx7410', 'xlx7410', '阿凡达速度发士大夫撒地方撒地方士大夫士大夫撒地方edf ', 1, '2016-01-19 07:07:03'),
(38, 'xlx7410', 'xlx7410', 'sadfasdfasdfsadf', 1, '2016-01-19 11:08:44'),
(39, 'xlx7410', 'xlx7410', 'sadfsdfsdfsadf', 1, '2016-01-19 11:38:05'),
(40, 'xlx7410', 'xlx7410', '啊打发撒旦飞洒地方十分士大夫士大夫速度', 1, '2016-01-20 01:10:31'),
(34, 'xlx7410', 'xlx7410', '士大夫首发式地方士大夫似的士大夫', 1, '2016-01-19 07:35:13'),
(35, 'xlx7410', 'xlx7410', '手动阀手动阀手动阀手动阀', 1, '2016-01-19 07:35:22'),
(36, 'xlx7410', 'xlx7410', 'sdfsdf sdf sdf sdf ', 1, '2016-01-19 07:40:36'),
(37, 'xlx7410', 'xlx7410', 'asdfsd f sdf s df', 1, '2016-01-19 07:42:03'),
(41, 'xlx7410', 'xlx7410', '舒服撒反对撒地方撒地方撒地方速度f', 1, '2016-01-20 13:20:55'),
(42, '23123214', 'xlx7410', 'sadf sadf sadf sadf sadf sadf ', 0, '2016-01-20 14:14:00'),
(43, 'qweasd', 'xlx7410', 'asdfasdfsadfsadfsdf', 0, '2016-01-20 14:25:51'),
(44, '2134123412', 'xlx7410', '123123123123123123123213', 0, '2016-01-20 22:47:15'),
(45, '23123214', 'xlx7410', 'fsadfsadfsadfsadfsadfsd', 0, '2016-01-21 19:30:51'),
(46, '23123214', 'xlx7410', 'afsadfsadfsadfsadfsadfsadf', 1, '2016-01-22 12:09:27'),
(47, '23123214', 'xlx7410', 'jhghjgjhgjhgjhgjh', 1, '2016-01-22 15:03:10'),
(48, 'dfdsafds', 'xlx7410', 'asdfsadfasdfsadf', 0, '2016-01-22 19:03:16');

-- --------------------------------------------------------

--
-- 表的结构 `pppf_system`
--

CREATE TABLE IF NOT EXISTS `pppf_system` (
  `system_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `system_webname` varchar(20) NOT NULL,
  `system_article` tinyint(2) NOT NULL,
  `system_blog` tinyint(2) unsigned NOT NULL DEFAULT '0',
  `system_photo` tinyint(2) unsigned NOT NULL DEFAULT '0',
  `system_skin` tinyint(2) unsigned NOT NULL DEFAULT '0',
  `system_string` varchar(200) NOT NULL,
  `system_post` varchar(3) NOT NULL,
  `system_re` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `system_code` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `system_register` tinyint(1) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`system_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- 转存表中的数据 `pppf_system`
--

INSERT INTO `pppf_system` (`system_id`, `system_webname`, `system_article`, `system_blog`, `system_photo`, `system_skin`, `system_string`, `system_post`, `system_re`, `system_code`, `system_register`) VALUES
(1, 'Simon Sun 技术笔记', 10, 10, 15, 1, 'fuck', '60', 60, 0, 0);

-- --------------------------------------------------------

--
-- 表的结构 `pppf_user`
--

CREATE TABLE IF NOT EXISTS `pppf_user` (
  `user_id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT COMMENT '//用户自动编号',
  `user_uniqid` char(40) NOT NULL COMMENT '//验证身份的唯一标识符',
  `user_active` char(40) NOT NULL COMMENT '//激活登陆标识符',
  `user_username` varchar(20) NOT NULL,
  `user_password` varchar(40) NOT NULL,
  `user_question` varchar(40) NOT NULL,
  `user_answer` varchar(20) NOT NULL,
  `user_email` varchar(30) DEFAULT NULL,
  `user_qq` varchar(15) DEFAULT NULL,
  `user_url` varchar(40) DEFAULT NULL,
  `user_sex` char(1) NOT NULL,
  `user_face` varchar(30) NOT NULL,
  `user_switch` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `user_autograph` varchar(200) DEFAULT NULL,
  `user_level` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '会员等级',
  `user_reg_time` datetime NOT NULL,
  `user_last_time` datetime DEFAULT NULL,
  `user_last_ip` varchar(20) NOT NULL,
  `user_login_count` smallint(4) unsigned NOT NULL DEFAULT '0' COMMENT '登陆统计‘',
  `user_post_time` varchar(20) NOT NULL DEFAULT '0',
  `user_re_time` varchar(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`user_id`),
  UNIQUE KEY `user_id` (`user_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=74 ;

--
-- 转存表中的数据 `pppf_user`
--

INSERT INTO `pppf_user` (`user_id`, `user_uniqid`, `user_active`, `user_username`, `user_password`, `user_question`, `user_answer`, `user_email`, `user_qq`, `user_url`, `user_sex`, `user_face`, `user_switch`, `user_autograph`, `user_level`, `user_reg_time`, `user_last_time`, `user_last_ip`, `user_login_count`, `user_post_time`, `user_re_time`) VALUES
(56, '7bd1732ee7feed170d9cb6cc77881b190cc1458a', '', '9262981', 'ce359e5293e96e2a8deabe1a64374e321be8fb73', '123123', '3d4f2bf07dc1be38b20c', '9262981@qq.com', '9262981', 'http://www.9262981.com', '女', 'assets/img/face2/4.png', 1, '123123', 1, '2016-01-06 23:27:59', '2017-01-23 08:12:46', '111.226.7.70', 99, '1461311317', '0');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
